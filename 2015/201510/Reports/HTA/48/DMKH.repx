/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v11.1, Version=11.1.4.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\assembly\GAC_MSIL\DevExpress.XtraReports.v11.1\11.1.4.0__b88d1754d700e49a\DevExpress.XtraReports.v11.1.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>English</Localization>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class xtraReport1 : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.ReportHeaderBand ReportHeader;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRLabel DiaChi;
        private DevExpress.XtraReports.UI.XRLabel TenCongTy;
        private DevExpress.XtraReports.UI.XRPictureBox Logo;
        private DevExpress.XtraReports.UI.XRLabel Title;
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRTable xrTable1;
        private DevExpress.XtraReports.UI.XRTableRow xrTableRow1;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell6;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell4;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell1;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell2;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell8;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell3;
        private DevExpress.XtraReports.UI.XRTableCell tableCell1;
        private DevExpress.XtraReports.UI.XRCheckBox xrCheckBox3;
        private DevExpress.XtraReports.UI.XRCheckBox xrCheckBox2;
        private DevExpress.XtraReports.UI.XRCheckBox xrCheckBox1;
        private DevExpress.XtraReports.UI.ReportFooterBand ReportFooter;
        private DevExpress.XtraReports.UI.XRLabel xrLabel2;
        private DevExpress.XtraReports.UI.XRLabel xrLabel1;
        private DevExpress.XtraReports.UI.PageHeaderBand PageHeader;
        private DevExpress.XtraReports.UI.XRTable xrTable3;
        private DevExpress.XtraReports.UI.XRTableRow xrTableRow3;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell15;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell5;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell11;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell12;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell7;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell14;
        private DevExpress.XtraReports.UI.XRTableCell xrTableCell13;
        private DevExpress.XtraReports.UI.TopMarginBand topMarginBand1;
        private DevExpress.XtraReports.UI.BottomMarginBand bottomMarginBand1;
        private XtraReportSerialization.dataSet1 dataSet1;
        private System.Resources.ResourceManager _resources;
        public xtraReport1() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAABAAAAAQAAAGhTeXN0ZW0uRHJhd" +
                        "2luZy5CaXRtYXAsIFN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhb" +
                        "CwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYVBBRFBBRKcHh7UAAAAAPQEAABRMAG8AZwBvA" +
                        "C4ASQBtAGEAZwBlAAAAAABAAAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc" +
                        "2lvbj0yLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM" +
                        "2EFAQAAABVTeXN0ZW0uRHJhd2luZy5CaXRtYXABAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAcSgAAAL/2" +
                        "P/gABBKRklGAAEBAQCWAJYAAP/uAA5BZG9iZQBkAAAAAAH/4QqeRXhpZgAATU0AKgAAAAgADAEAAAMAA" +
                        "AABAwQAAAEBAAMAAAABAYoAAAECAAMAAAADAAAAngEGAAMAAAABAAIAAAESAAMAAAABAAEAAAEVAAMAA" +
                        "AABAAMAAAEaAAUAAAABAAAApAEbAAUAAAABAAAArAEoAAMAAAABAAIAAAExAAIAAAAcAAAAtAEyAAIAA" +
                        "AAUAAAA0IdpAAQAAAABAAAA5AAAARwACAAIAAgAlgAAAAEAAACWAAAAAQAAQWRvYmUgUGhvdG9zaG9wI" +
                        "ENTNSBXaW5kb3dzADIwMTA6MTI6MDIgMDk6NTA6MTIAAASQAAAHAAAABDAyMjGgAQADAAAAAf//AACgA" +
                        "gAEAAAAAQAAAJagAwAEAAAAAQAAAE0AAAAAAAAABgEDAAMAAAABAAYAAAEaAAUAAAABAAABagEbAAUAA" +
                        "AABAAABcgEoAAMAAAABAAIAAAIBAAQAAAABAAABegICAAQAAAABAAAJHAAAAAAAAABIAAAAAQAAAEgAA" +
                        "AAB/9j/7QAMQWRvYmVfQ00AAv/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPF" +
                        "RgTExUTExgRDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UF" +
                        "A4ODg4UEQwMDAwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIAE0AlgMBI" +
                        "gACEQEDEQH/3QAEAAr/xAE/AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAA" +
                        "AAAAAEAAgMEBQYHCAkKCxAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVU" +
                        "sFiMzRygtFDByWSU/Dh8WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1" +
                        "eX1VmZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFM" +
                        "oGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkh" +
                        "bSVxNTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APVUkkklKSSSSUpJJ" +
                        "JJSkkkklKSSSSUpJJJJSkkkklMLba6mb7HBrfEqDczGeJbYCFSzL6b7DRMhh+8+SpOotqO6sk/DlMOQW" +
                        "Y7S6cWxXiBoS3Hhu7f2mj98Ii5vD6tVlZFtTdW4xDH2j6JsPNY/4tv01u4dwezaTJbwfEJsZy4uGYrt4" +
                        "plCPDcTfdsJJJKVjf/Q9VSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKQsiw1UueO3fw80VM5oc0tcJDh" +
                        "BHkUjsoOFfRW1vqBwYOfcdPvXNdU+uD8S/7JVU9zBpZa72uj/gJ+l/XWf1vA6x9X+o2mt77sNx31ueS8" +
                        "Fh4bZu9zXM+hvT09S6b1SsUZTAyw8MfxP8AwVioZ8mSFiUPfwC4yljP67G3MUISoiXtZd4xmP1U3qukV" +
                        "Yt/TqrqRtNw9UmIJLu72/1VapORi3NLAXAmIHBnsquDiGnBxxQSWsra0fvaaLX6W2ywG2waNMNPie6nw" +
                        "ioQGOXHjoUJfNEMWU+qXGOGdn5flk6KSSSsMD//0fVUkkySl0kkklKSSSSUpJJJJSkkkklPJfWb645eB" +
                        "1FvSek0NyMw7d5cC6HP1ZVXWzbuft9yv/VnM+s2U/IHXMduO1gb6MN2lxO7f+fZ9GFzeCPU/wAZlxfrt" +
                        "stInyq2tXf2uLanuHIaSPkElM0lyX1F6/1XrD8wdQtFgpFfp7WNbG71N30B/IXWpKaPVemjqFLWghlrD" +
                        "LXESIP0mlctn/4uftEvovrotPMNOw/Fn5v9lduomytphzgD5lRexD3fdFxmdCYkjir96P6TJ70/b9s0Y" +
                        "9LF8P8AdLhdC6D1LpuGMXJyWZDWOPpuAdIafzfd+65brGhjQ1vASa9jvouB+BlSUgjEGwKtYZEiiVJJJ" +
                        "Iof/9L1N4cWkMIDo9pOoBWI3onUMtzn5+SQZMNbrp+DGLWzMlmJjPyHiQwcDueGhY1D+udUBurtGPTMN" +
                        "jQf2Y97lS5s4pThjlGeWdGQxYzpw/v5PlbXLDIIynGUMcbA9yY1v92CLLxczozmX495fU4wQeJ52vZ9H" +
                        "3Lauz2V9Ls6htltdJu2/wBVvqbVidWwc3HxmvyMs3tLwAwzEwfdqVs4NVd3SaqbRurspDHt8WuG1wUfJ" +
                        "3HmMuMRljhwxmMcpcfCf6vzL+ZqWHHMyE5cRiZxHDxB8+6V0/rH1zyMjJys8010kAt1cBvlzWVUhzGNY" +
                        "3b9JbXQ/qz9Z+j9ZY2vLD+mj3Wuc4lr28en9ncfZd/L/wDVaqXfUfr/AErJfkfV/Mlp0a0u9Ozb+4/dN" +
                        "Nu3+Un6d9cuu9N6mzp31hqBa9zWueWhr2hx2ss/R/oralpNJ67rvWKejdNtzrRuLYbVXxve76DFw+D0r" +
                        "6yfW8uz8zLOPhlxFY126aEUY7S1u1v0fUe5an+M4W/s/CLZ9P1nbvCdh2T/ANNdD9WTQfq/0/0P5v0Gc" +
                        "fvR+k/8E3IKeLz/AKvfWL6rMPUun5zrseqDaBIgf8Ljuc+uypdl9W+u19c6a3KDRXcw+nfWOGvH7v8AI" +
                        "e33MVvqZpHTco3x6Xo2epu427TuXG/4rhZHUD/g/wBD/nfpP++pKcrL6bf1T68ZmFRecax9jyLROm1gc" +
                        "foOY73LuehdIyekdJtxcnJOXYXPs9Qzw5oGz3uf+6uW6Z/+UvI/r3f+e131/wDM2f1T+RJT5R9VugZnW" +
                        "nZIxcw4ZoDC6N3u3bo/m3s+jsXpPQOmX9L6ZXhZF5ybGOcTaZ13OLx9Nz3e2VyX+K/+c6j/AFavy2rvk" +
                        "ipSC/DxnkudWJPJ4RkklIq8aio7mMAPj3RUkklKSSSSU//T9L6niuy8KyhmjyAWzxIO5YuF1PL6bV9kv" +
                        "xXu2E7eQRJn91zXLpElVzYRPMJ48vtZhGiBwz4sV/5uTYx5THEYzx+5iMr6xrJ/fea6j+0+o0faH0urp" +
                        "rI9KkAlzi7l/wC97VqMbnt6G1mFtZmikCoWg7Q+Pz2rRSSw4IQzTl7vuZTECYNcX97h/RVlyylijH2+D" +
                        "GJHgIvh/u3+k+dY31s+tvRi7F6lhvynAktda1wdqfzbqmursrQ6cHr31v6zTm5uOcbEq2hzy0saK2Hf6" +
                        "dfqe+2x7l6SkrTXaHW+k0dY6dbg3naH6ssGpY8fQsC4fEy/rZ9Ty7EsxftWFuJYYc6uT+dTbX7q9/8Ao" +
                        "7Gr0dJJT5xmdW+tf1qZ9gxsI4+K8j1SA5rSOf019u32fyGNXZ/V3odXQ+msw2O9SwnffbEbnnmP5Dfos" +
                        "Wokkp4Xp2Dmt/xh35Tse1uOX2xcWODDNcD9JGxdw9u5jmn84EfepJJKfLOn5HXPqf1PIrOGbm2DYQWu2" +
                        "va0n07arWBy9A+r3UsvqfTGZmZR9mtsc4CqHCGg7WH9J7vc1aaSSlJJJJKUkkkkpSSSSSn/2f/bAEMAA" +
                        "QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgICAwMDAwMDA" +
                        "wMDA//bAEMBAQEBAQEBAQEBAQICAQICAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA" +
                        "wMDAwMDAwMDAwMDA//AABEIAE0AlgMBEQACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGB" +
                        "wgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzY" +
                        "nKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHi" +
                        "ImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8" +
                        "/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABA" +
                        "ncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q" +
                        "0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys" +
                        "7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AP7+K" +
                        "ACgAoAKACgAoAKACgAoAKACgAoAKACgDA8S+KfD/g7SpNb8TapbaPpcUsED3dz5hTzrl/LgiRIUlmkkk" +
                        "boFUnAJ6AmmouTslqF1tfU5bTvi78ONXg+06Z4r069hBKs8KXjFGH8MiG2DxN7MBkV4GZcTZLk9eWGzP" +
                        "GqjWXSUJ6runy2a802j18DkOb5nSdfL8G6tJOzcZQdn2a5rr5o0B8SPBJIA1+1ySBzDeAc8dTbACuCPH" +
                        "XCblGP9tUrt22n/APInZ/qhxNZ2yip98f8A5I7ZHV1VlIZWUMCDkEMMgg9CCK+sUlJKUXeLV16HzmqbT" +
                        "3Q6mAUAFABQAUAFABQAUAFABQAUAFABQAUAFAHxD8Y/HPhD4h+IbnwFJexz2/hy7eDYZWgF3rgQxXFxp" +
                        "1yGEc72G9oAOTv8zgg5r8v44zLjDKMdhMyyqEo5RRh7zilNSlK1/ax6RskovZXbum0foXB2X8NZhhMXg" +
                        "s0knmdSXuqV4tRV7OnLZy1u0tdrq1z5k1LwN4m8KXR1Pwzd3V3Eh62gxqKJnOy4s1DR3sQ6HaGz3QVeV" +
                        "8ccOcYYRZRxHhKdLGSdrTs6c29nCfxUm33tr9pk5jwlnXDdWeZ5JXqTox1bhpUjHrzx1VRddE9Pso87+" +
                        "Ef7V/hf4seP/iF4Q08rPo/wg1Cw8KeKfG1gwl8O6t8R9Qt5bu/8KWLR7yz+C9MWI6lNGWgW9vEh4MMlf" +
                        "IcTeFWY08RSxnDtZVcsUJSlRlf2rm7cjjP4JUox59Lqbk47pa/R5D4h4CrQ+q53TdPHuUUqqt7JJXvzR" +
                        "+KM5O194xipbXP1c+EPi6PXNFGlS3KXFzpsSNZzrIsgu9KY7YJEcEiT7K37okdtvrX2vh5nlTF4GrkeP" +
                        "5o5lgrRtNOM3T2jdPW8X7rvrblb3PlOOMnhhMdDNsGlLAYrVuLTiqnWzWlpr3l8z2Gv0c+HCgAoAKACg" +
                        "AoAKACgAoAKACgAoAKACgDiviJ4hm8LeD9Z1uGORmtLdQ88cbyiwinkWCTUpY4w0hgsVk8xyAdoXcflB" +
                        "NeVnjzOOU455PR9pmXs3yK6Tv1avo3FXaXVpI9HKIZfUzLBxzStyYDnTm7XVlrZ9k3o30TufmX418E+H" +
                        "7Kwm8S2muadoVqVa7eTV9Qit9KnJLSPLbX9xJuSaRssBlwzZxjpX4/gPGGPDFCrS8QakKOApK069VxpT" +
                        "glv7SM+WNTytaT7SP1LF+G39vVKc+DYSqYuq7xpQ5qkZX2cHG7gvJ+6vJH4kftP/wDBX/WPhB43k+DXh" +
                        "PwJ4r1HRLV5rPxZ4+11JvDevXNgwESyfCxb1Cmr6ay5J1C7ZBMny25j/wBbXj8W8IcO+NnAWPzXwV48w" +
                        "eEx+KjZYugvaUr681OrCLVTC1JfA5xiqsL3VOW52cOcUZx4VcWYLLfFHhTFYnCYeScsNWvCrbTlnTk06" +
                        "eIhBtSUJScJ2s6is0fp/wDsj+F/hb4//Z18EeN/Bdsmj3HxHtbj4iX1zHp8Ok6xd3fiCXy7e98RaUP9f" +
                        "eSaXZWyNKxZnVFIlYV8P4P4LxH8DeD8l4U4sc8RWoyrOpGdWVej71abisNXesYKny8kUlFXd6adz63xG" +
                        "xHBHizxPmvEfDUY0Y1IwUJQpxpVNKcbuvSWjlz815PV2VpWsfQXg+4+IXwp8X6FdaRBcapa3Gq2tl9ht" +
                        "Feex1iO+uI7V7DyyC1hd3YkwjEKBJtOWAr+lskzvhjivE0cxpWpZ7STSi7Qq2a96LadqsH212ukmtPwv" +
                        "NMo4h4eoYjBYqUqmU1GtY3lSuneLV9acl30vflba0P1dydm7ad23OzK5zjO3Oduc8Zzivrz5cdQAUAFA" +
                        "BQAUAFABQAUAFABQAUAFABQBT1CwtNVsL7TNQhW5sNRs7mwvbdmdFntLyF7e5hZo2SRRLDIykqQwzwQa" +
                        "AaXVH8Fv7bPwF/bB/4Ju/tGeO7nw34l8Z/Ef4F6vrE3inwXq3inWdY+IGl3ngbUbiV9N0vxpZancy6pp" +
                        "Or+Gvn02XUrcwiQ2wl84CXYf518WeHfAvxe4ip+F3iTRjhOOFh1UwFaTWHxFSnO69pgcS70q/JUi4VML" +
                        "UUpKSv7JxcZH7d4dZ54seHuTPjzgaTxHCnt3TxlJL21GE4a8uLoq1SlzQalTrwsrP8AiXUoE3gv9o/9n" +
                        "L9rPQrbwB8WdA0rQPEt1hLXQfFFwv2GW/lj2/a/BHjRPsctlfSNnZEz2tyfu4lB5/hDi/wA8ffovZ1jO" +
                        "O/DHO8RjcgptynicHF+0jST5uTMMC+dVKdmuacY1afW9J2a/rnhvxe8IPHnK8Pwhx5lVDC5zNWjRxMvd" +
                        "c2rc2Dxa5HCb6QbhPS1qiTP6APgj8JZvA3wO+ENt8Pr6/vdJ8NeAvD+kWEcs6nXbaHSbMWDJJPCsEWoS" +
                        "RtbsHwiMxB+Q1/ffhV4zZX4icAcL4zjTB4eljcdg6c6rUW8NKq1adotylS99SsnJqP85/H3iF4X4/gji" +
                        "zPsJwxXrVMPhMVUjC8rYiNNO8PeSSqe7y7JNro9Wfoh+zHY654mhvfFniWyRINIun07Rrl4jBJf36ptv" +
                        "rmS1ZQqHT1IjDgKDK7YAKGv0bLeAsiyzOqOeZfXc8PyN06balGEpbTjO7bXK3ZO9m732t8RmPGOc5hlM" +
                        "spx1NQrOS55JOMnFa8ko7J81m2rJ2Wh9kV9wfIBQAUAFABQAUAFABQAUAFABQB/PZ/wUz/4LDfFX9nj9" +
                        "obQ/wBjn9jz4WaF8U/jtdR+Gk8SX+v6br3ieKz8ReMYUvvDfw/8J+DPDl/o17rvii60i4t7y5uJbwW9r" +
                        "DdRp5Tt5rQ60oRnzOWyA+rf+CZ/xj/4KW/FbV/i9B+358GfDvwl0rw/pvguX4aSaX4VXw9eeItQ1i58S" +
                        "f8ACSK9xa+OfGFjd22j2unWYKbYJo3uQWLBhiJcvM+T4QP1mqQCgD5Y/ar/AGbLT9ozwhpem2moWGg+L" +
                        "fD1+bnQ9ev7SS8tRYXwSDXNHv4YGSaax1G3jR8DO2aFDjG4H+dvpG+A2G8cuGMsweEx1HBcV5fiVVwuK" +
                        "nGUlCMrKtSlyNS5ZxUZRtrGrThJaXP2nwT8Xa/hNn+OxeIwk8Xw/jKDp4jDxlFOUo3dKpHmTjzQblF30" +
                        "lCc4vofgv8AHX/g3RX4mNea94C+KfgL4a+MLiTzp0sfDGuT+DtXlZt0sl7oEVzF/Zd1I3zGayaNS3LxO" +
                        "TkT4M8F+Pnh5DCZHxr4h5ZxDwrBcsXUp4iOPoxtooYl83toLSPs8QpPl0VSK0H4m8U+EPGc8RmvDPBeP" +
                        "yfP5y5pck6LwlWV9XOhFL2c/wC/SaTfxQk9T9Gv2Ff2Dv2kf2Yfg7Y/CD4qfG/wL8U9P8O65qD+E9TsN" +
                        "K8UQXuleFdSMV3/AGE8+sTzzyf2VqT3DWwZnjEEojAQIK/Sc88N+HsypyllmFhgMXzylelFKnJzk5Tcq" +
                        "StHmlJuTlFxbbbd7nxOU8cZzgKlOONrzxeFUVG1STc0oxUYqNRtytGKSSlzKyVrH6yaTpdpounWemWSe" +
                        "XbWcCQxjjLEcvK+ODJNIS7HuzE19rl2AoZXgcJl+FjahRgor5bv1b1fmz5XG4yvmGLxGNxMr1qs3J/Po" +
                        "vJLRLsaNdpyh0oAazogLM6qo5LMwAA9ySBQ2knJu0UCabUV8TAOrAMrKynoQQQfoQcGi91dbB1t1HA55" +
                        "HSjfVbANZ1RS7sqKvJZiFUduSSAKAFBBAIIIIBBByCDyCCOCCKAFoAQkKCzEAAEkk4AA5JJPAAFACKyu" +
                        "odGV1blWUhlI9QRkGgB1AH8dnwLiTxH/wAHMHxHl1lF1B9I8f8AxhuLA3CrJ9ml0P8AZ8fTdKkj3AhWs" +
                        "rQhIyOVwMc1vNWp07LS2v8AwQP69/E17cab4b8Q6jZuI7uw0PVr21kZFkVLi1sLieByjgq4WWMHB4NYA" +
                        "fgD/wAELf2/P2pv23NV/aTt/wBo7xvo/jG2+HGn/Cubwn/ZHgjwv4QGnz+Kbjx4mr/aH8OafY/bjdJoN" +
                        "vsExby/Lbbjc1aThycuu6A/oarMAoAybvXtDsJDDfazpNlKuN0V3qNnbyLnplJpkYZ+lNJvZAS2Wr6Tq" +
                        "TFdO1TTr9lGWWyvba6ZR0yRBK5AzQ01ugNGkAUAZ2rxajNpeow6RdW1jqstlcx6be3lq19Z2l+8LraXN" +
                        "1ZJPavd28E5VnjEsZdQRuGc1yZhDG1MDjaeW4mFHMJUpqlUnB1IQqOLUJSgpQc4xlZuKnHmStzK9zfCz" +
                        "w1PE4apjKM6mDjUi5whLklKCkuaMZuMlFuN0pOMknq4vY/LKx/Yo+Pvxf1PV9d/aF+Nmp2M41G8g07S/" +
                        "D9zJrUM9mlzKq3lpaC507QNA026ULJBbR28kqoQJQj5Ff54YL6KPjR4l5pmedeN3i7iqM/bTjSo4WbrR" +
                        "lTUnapCPNSw+GpT+KFKNKUuW3tFGWh/aeK+kT4XcBYTAZZ4SeGmHnH2UJVK2IiqUlJxTcJS5Z1684u8Z" +
                        "1JVYxuvcco6nkPxc+Fnxh/Yb1Pwx8Qfh18UdY8ReENS1VNKubLUmube1k1BIbi+j0XxFoP2y60rUNN1O" +
                        "ytpfLuYhHNFIjYCNsc/lvih4eeKP0RMw4e454H8RsZj+FsRilRnTrOUYOqoyqRoYqhzzo1aNWnCfLUgo" +
                        "ThKLsovlcvvuA+NeAvpLYTOOEeLuB8Lg+IaOHdWFSjy83JzRg6tCryRq06lOcoc0JucJxera5kv088Xf" +
                        "HrSvC/7MHiv9pRNMkvdK8MfBTX/AIwf2L5jRy3UWg+DbzxU+j+escjI8klmbcyBGwTuwa/1H4L4lw3Gn" +
                        "CnDPFeDpSp4bMsDQxMYveCrU4z5H3cb2b620P4D4myOvwxxFnvDmJqKeIwOLq0JSW0nSm4cy8pWv8z+N" +
                        "z9lb9n79sD/AILm/EL4y/FH4tftY3/gHwv8P9U0a2vdCjHiDXtJ0K48Yw6rqeheGPh/8MtO8ReGvDmke" +
                        "GtJs9KdJb64n+1XMgBb7TMZpE+sqqnG8YxfMeGfpj+w5/wTS/4Kb/sVftkaDp/h39orSfEv7JMEaav46" +
                        "1TWtf1/VPC/jjQXeWybwfa/B/VdYvb/AMMfEuFVWW31S1uVsbOIhzdXIMljJLdHl0i+ewH7a/tz/te+D" +
                        "f2Hv2bfHPx98X2n9tXOjLaaH4I8IpcizuPG3j/Xmkt/DPhmG6Mcv2WCaWOS5vJwrm30+1uJQrsgRohBz" +
                        "dkB/LF8EP2U/wDgpJ/wWrn1P9ob40/tE6h8JvgPe69q2m+FIWfxGPC9wLGZrPUdP+FXwi0LWdC0m50LR" +
                        "biAWU+sapeLPd3MUgMt1JHKV2qxpQXKl74F/wCPf/BPn/gon/wSO0if9p79mv8Aaj1z4jfDHwZNYXXju" +
                        "HShr2ktpGkG7jja88e/CLXNb8UeD/FvggXU6pdTw3D3NmshmMcKI1wkxdK1pRfMB/Sd/wAE2/25/D/7f" +
                        "n7Nuj/F220uz8MePdD1S58FfFnwXZ3D3Fp4c8caZbWt3NNpD3Dtey+GfEWmXsF/p7zZkWKZoHZ5YJGOc" +
                        "4OD5XuB/Jl8W/2bvGv7Wn/Bb/8AaW+Bnw8+KVz8GfFniT4l/ETVbD4g2aa29xpUPhn4caVrN9aIvh3Wv" +
                        "D+rY1a0tmtyY7pF2udwZcqernjGnBSV00M/qs/YZ/ZH+I37Fv7J/j/4Q/FD40Xnx38R3viP4ieNovGt8" +
                        "viNJrfS9d8L6RY2mgBfFHiDxLqXl6fLo0sgxcCL9+dqKdxblly3fKrIR/HP/wAEt/2BPi9+3VffGez+E" +
                        "/7R+ofs9S/DSz8C3GtzWCeMHbxWniqbxVHYRy/8In4r8LELox0CUjz2m5ufkC/OT0VHTShzxbdgP7bf2" +
                        "Cf2avHP7JH7NHhH4HfEX4q3Xxo8VeHNa8Zane/EC8XXFuNUg8TeKdU1+xtXXxHrXiDVQNKtL9LYb7p1x" +
                        "H8oVcKOaVnJuK90D7JpAecar8IvhxrV5PqGo+FNPkvbmV5ri5he7s5J5pGLSSzfY7mBZJHY5LEEk1UZy" +
                        "hflYF7w/wDDTwL4Wu11DQvDdjY36Kypeg3FxdIrqUcRz3U08ke9Tg7SMjiiUpSd5O7A7mpAKAPNPjB8T" +
                        "NI+D/w58U/ETW7ea9svDlgs8en27KlxqWoXVxDY6Xp0Ujhkha91C5jjMhBEakuQQuK+B8T/ABAyvwu4E" +
                        "4j45zelOrhcBQ5lSg0p1ak5KnSpRb0i6lSUY8zTUU3KztY+t4E4PzDj7i7JOEctqxp4nGVeXnkm404RT" +
                        "nUqNLVqFOMpcq1k1ypptH5neBNY/be/awhufGXh3x9pvwj8Afbrq10x9M3aZazyW0nkXdtphsrG+8R6x" +
                        "9jcFZJ7meCEyhgmCCq/wPwZmv0t/pKU8VxbkfG2H4Y4J9tOFH2V6cZOMnGcaXJTnia3s2uWVWrUpwc0+" +
                        "Tql/X/FGXfRw8C6mH4dzThbEcQcWxpxlU9o+eykrxlU5pQoUudPmjTp05zUWnPdN+a/tZfBP41/Db4a6" +
                        "VrnxM/aD1n4n6XfeLtN02DwvqC6wLWLU5dO1e6j1aF9Q1a7hZ7K3tZEH7lWxKcEcivz/wCkx4S+LPAfh" +
                        "9gM64/8cMVxDl9XM6VGODqKsoKrKnWnGtF1K01enGE18Cdp77n2ngP4i+HPF3GeMyvg/wAJ8Pk2PhgKt" +
                        "SWKg6Tk6aqUYuk1ClB8s5Si/javFXV7M/S34GeFdB8dfsm/D7wT4p0+PVvDHjD4M6f4W8RaXM8iRaloX" +
                        "iDw4+lavYSPC8cqJeWF3JGWRlYBsgg81/ox4AO3gn4VPr/YOD/9MxP4l8X/APk6fiF/2OMV/wCnZH81P" +
                        "i//AIIf/t9/sf8AxH8QfEr/AIJwftGpPpV7m003RLnxY/w4+JH/AAj73RvLfwx4lbUrLUPhp49stKdEV" +
                        "J76Sz89lMn2eJyc/srqKppNWXc/OS7+z3/wWO/bq/Ze/ab8M/sxf8FLfBFnc6fr3iLw/wCHtX8VX/hrR" +
                        "PCXjzwZaeKL5dG0DxpaXvg14/Afj3wGdQbdcz28AmMCSvFcvJCbdx0ocspRnewHu3/BzlD4mb9nv9mWe" +
                        "wF7/wAItF8a/Eaa6Yt/9nrrk3w/1T/hFzfAHy/ONvHqQg3f7eKKHxv0A/Yn/gmhP4KuP+Cf37H8nw/+z" +
                        "jwyPgH8PIkFtwo12DQ7eDxes3Q/bV8Xx3wuM8+fvzzWAHuf7TVx4Rtf2cfj3ceP305PBEXwb+Jb+LG1b" +
                        "yv7N/4R8eDdZGqLeCb920L2hYEHJJOBzimt0B/M7/wa6xa+LT9sSUmQeGSPgTC4kDc+JEtPiS8u0n5fN" +
                        "TS5I/N/iwyZ4xWtf+J8gOJ/Zp/5WWfjH/2OHx2/9Urb0Vfgo+n+QH9cXjX/AJE3xb/2LOvf+mq6rED+T" +
                        "3/g1+Zf+Eh/bKTI3HRfgcwXPzbRe/FEFsdcZOK3rf8ALv0A/rorAAoAKACgAoAKAPBv2mPhZqPxl+C/j" +
                        "LwHos0EGuX9vY3+htdSGK1l1bRdRtdWs7S5l6RRXz2nklz8sZkDHIUivx3x88O8b4p+FHFnBmWVIQzev" +
                        "ThUw7m7QdahVhWhCT+yqjh7Pm2jz8z0R+l+EHGuF8PvEPhzijH0pTy6jUnCso6yVKtTlSnOK+04KfOo/" +
                        "a5bLVn5nfBT9pv4tfsweGW+EHjr4EeK9ZTQb+/m0gxR6npGoWianezX9zayTLousaZrFk13cO8E9u4Gx" +
                        "8ZcYNfwJ4SfSB8TPo+cP0/C3jPwYzLFRwlaq8O4Rq0akVVqSqTg5ewrUq8faSlKFWnJLldrySTP7A8Rv" +
                        "BrgXxnzqfiBwn4pZfQliaUFWUpU6kJSpwjCMlF1aNWlPkilOE4u0l9m7RX/AGh1/aU/aU8Fj4jav8M9c" +
                        "8H+BvC2p6bb+CPh3aaZqmreK/EV7rz/AGfUPE17ZpaQ6k9tplgoCzPawRKspWJGzLJWHjnS8fvHzhGPG" +
                        "2Z+H+KynhDLq9KOAyyFKrWxmKniXyVMVVgoRq8lGmklJ0qcEp2pxlepM28JKvg54PcR/wCquB40w2Y8S" +
                        "46jOWMx8qlOlhcPCguaGGpycnDmq1NXFVJtuKcpK0IH3No2mfHix/Ye0zSPgVH4a8O/tB2XwXsrLwDB8" +
                        "UdL1FfD+neM7bTEjtrbxHpqvaXlvICjpH5wMMVwY2njkhDo3+h3gXhMXl/g74Z4DMcJVoY6hkuFhUpVI" +
                        "yhUhOFKMZRnCSUoyTTTTSZ/F3iticNjPEzjzF4LFU62Dq5riJwqU5KcJxlUlJSjJXUk01ZptM/mW+HH/" +
                        "BV3/grN+xDPrnwk/al/Zu8afG3U4NS1W/03WPiV4Y8YaX4otZL++urmWLSviF4F0TW/CfjTwkt5K5shF" +
                        "DMYLfZDDcLAkcafrvs1U96DSj2Pz84fwj8D/wBvL/gtL+2X8M/jx8dvhBffBj4I+CZvC2man4hufC2ve" +
                        "DPCui/Dvwf4kn8VXvhLwT/wl3l+J/HXjHxVql5PE94iyW1s9z5khghhSJqk4U4OC1bQz+sH9tX9kzwJ+" +
                        "2z+zr47/Z/8eTyaXB4kgttS8LeKra2iu9Q8EeOdEka78MeLNPt5WjW4bTrzMdxBvj+12M09uXQSlhhGT" +
                        "i7xeoj+Vb4V/Fv/AIKvf8EU5dc+DPiT4DSfG/8AZ/fxFf33hm7g0Xxd4r+Hf2rULhrm91b4e+PvBtvd6" +
                        "n4LXxDtNzc6PrVkTHcySSLbpI8kkm6jSqRfIrSAtfGL9rL/AIKt/wDBX7SH/Z2+FX7NF/8ACP4P69qVh" +
                        "F48nsdK8WaF4e1GzhuIr23tviN8WvHVno9gPDdpPai5k0zS7NLq9aNUaO5GImnkVLWdnfawH9Mf/BO/9" +
                        "iHwr+wP+zfoPwX0bVIvFHiu+1G68Y/FDxvHaGyXxb491e3tLfULmxtpGkuLTQNIsrGCw06CRi62tsrv+" +
                        "9klJxcnJ3k7sD8MP2efgd8a9J/4OGviz8WNV+D/AMUNM+Fl/wCLPjVNY/Eu/wDAXiiz8A3kOo/CCCw0+" +
                        "W18YXGlx+H7iO/vgYIWS4IlmGxctxVzmpRgl0QH9U+raemraVqelysUj1LT7zT5HA3FEvLaS3dgMjJVZ" +
                        "M4rMD+DL9nvx9+29/wRP/aU+L3h+7/Zu1n4h6Z4utl8K6lbXvhzxn/wiPjzQPDWu6nc+DPHvgDxx4Z0n" +
                        "V7ZPMhvZyYnjuCsd08NxDFPGGToa9slyu1lbUD+wH/gnt+0b8Wv2rf2ZPDPxu+NHwtHwc8Y+KPEfjS3g" +
                        "8DDTPE2liy8N6N4ivdL8OX/AJfi6G11m7Oq6bbLObkwwwzl90SKhArCS5W1cD7cpAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQB/9kL";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            this.ReportHeader = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.ReportFooter = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.PageHeader = new DevExpress.XtraReports.UI.PageHeaderBand();
            this.topMarginBand1 = new DevExpress.XtraReports.UI.TopMarginBand();
            this.bottomMarginBand1 = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.DiaChi = new DevExpress.XtraReports.UI.XRLabel();
            this.TenCongTy = new DevExpress.XtraReports.UI.XRLabel();
            this.Logo = new DevExpress.XtraReports.UI.XRPictureBox();
            this.Title = new DevExpress.XtraReports.UI.XRLabel();
            this.xrTable1 = new DevExpress.XtraReports.UI.XRTable();
            this.xrTableRow1 = new DevExpress.XtraReports.UI.XRTableRow();
            this.xrTableCell6 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableCell4 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableCell1 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableCell2 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableCell8 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableCell3 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell1 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrCheckBox3 = new DevExpress.XtraReports.UI.XRCheckBox();
            this.xrCheckBox2 = new DevExpress.XtraReports.UI.XRCheckBox();
            this.xrCheckBox1 = new DevExpress.XtraReports.UI.XRCheckBox();
            this.xrLabel2 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel1 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrTable3 = new DevExpress.XtraReports.UI.XRTable();
            this.xrTableRow3 = new DevExpress.XtraReports.UI.XRTableRow();
            this.xrTableCell15 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableCell5 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableCell11 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableCell12 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableCell7 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableCell14 = new DevExpress.XtraReports.UI.XRTableCell();
            this.xrTableCell13 = new DevExpress.XtraReports.UI.XRTableCell();
            this.dataSet1 = new XtraReportSerialization.dataSet1();
            ((System.ComponentModel.ISupportInitialize)(this.xrTable1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.xrTable3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dataSet1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // ReportHeader
            // 
            this.ReportHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label2,
                        this.label3,
                        this.DiaChi,
                        this.TenCongTy,
                        this.Logo,
                        this.Title});
            this.ReportHeader.Name = "ReportHeader";
            this.ReportHeader.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.ReportHeader.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.xrTable1});
            this.Detail.HeightF = 25F;
            this.Detail.Name = "Detail";
            this.Detail.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.Detail.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // ReportFooter
            // 
            this.ReportFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.xrLabel2,
                        this.xrLabel1});
            this.ReportFooter.Name = "ReportFooter";
            this.ReportFooter.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.ReportFooter.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // PageHeader
            // 
            this.PageHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.xrTable3});
            this.PageHeader.HeightF = 25F;
            this.PageHeader.Name = "PageHeader";
            this.PageHeader.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.PageHeader.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // topMarginBand1
            // 
            this.topMarginBand1.HeightF = 25F;
            this.topMarginBand1.Name = "topMarginBand1";
            // 
            // bottomMarginBand1
            // 
            this.bottomMarginBand1.HeightF = 25F;
            this.bottomMarginBand1.Name = "bottomMarginBand1";
            // 
            // label2
            // 
            this.label2.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(100F, 0F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(78.12506F, 25F);
            this.label2.Text = "Tên công ty:";
            this.label2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label3
            // 
            this.label3.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(100F, 25F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(78.12506F, 25F);
            this.label3.Text = "Địa chỉ:";
            this.label3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // DiaChi
            // 
            this.DiaChi.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.DiaChi.LocationFloat = new DevExpress.Utils.PointFloat(178.1251F, 25F);
            this.DiaChi.Name = "DiaChi";
            this.DiaChi.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.DiaChi.SizeF = new System.Drawing.SizeF(554.4998F, 25F);
            this.DiaChi.Text = "DiaChi";
            this.DiaChi.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // TenCongTy
            // 
            this.TenCongTy.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.TenCongTy.LocationFloat = new DevExpress.Utils.PointFloat(178.1251F, 0F);
            this.TenCongTy.Name = "TenCongTy";
            this.TenCongTy.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.TenCongTy.SizeF = new System.Drawing.SizeF(554.4998F, 25F);
            this.TenCongTy.Text = "TenCongTy";
            this.TenCongTy.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // Logo
            // 
            this.Logo.Image = ((System.Drawing.Image)(resources.GetObject("Logo.Image")));
            this.Logo.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.Logo.Name = "Logo";
            this.Logo.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.Logo.SizeF = new System.Drawing.SizeF(100F, 50F);
            this.Logo.Sizing = DevExpress.XtraPrinting.ImageSizeMode.StretchImage;
            // 
            // Title
            // 
            this.Title.Font = new System.Drawing.Font("Times New Roman", 20F, System.Drawing.FontStyle.Bold);
            this.Title.LocationFloat = new DevExpress.Utils.PointFloat(0F, 58F);
            this.Title.Name = "Title";
            this.Title.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.Title.SizeF = new System.Drawing.SizeF(1067F, 42F);
            this.Title.StylePriority.UseFont = false;
            this.Title.Text = "Title";
            this.Title.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // xrTable1
            // 
            this.xrTable1.LocationFloat = new DevExpress.Utils.PointFloat(8F, 0F);
            this.xrTable1.Name = "xrTable1";
            this.xrTable1.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 96F);
            this.xrTable1.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.xrTableRow1});
            this.xrTable1.SizeF = new System.Drawing.SizeF(1059F, 25F);
            this.xrTable1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // xrTableRow1
            // 
            this.xrTableRow1.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.xrTableCell6,
                        this.xrTableCell4,
                        this.xrTableCell1,
                        this.xrTableCell2,
                        this.xrTableCell8,
                        this.xrTableCell3,
                        this.tableCell1});
            this.xrTableRow1.Name = "xrTableRow1";
            this.xrTableRow1.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 96F);
            this.xrTableRow1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            this.xrTableRow1.Weight = 1;
            // 
            // xrTableCell6
            // 
            this.xrTableCell6.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.xrTableCell6.Name = "xrTableCell6";
            this.xrTableCell6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            summary1.Func = DevExpress.XtraReports.UI.SummaryFunc.RecordNumber;
            summary1.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.xrTableCell6.Summary = summary1;
            this.xrTableCell6.Text = "xrTableCell6";
            this.xrTableCell6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.xrTableCell6.Weight = 0.034552845528455285;
            // 
            // xrTableCell4
            // 
            this.xrTableCell4.Borders = ((DevExpress.XtraPrinting.BorderSide)((DevExpress.XtraPrinting.BorderSide.Right | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.xrTableCell4.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.MaKH")});
            this.xrTableCell4.Name = "xrTableCell4";
            this.xrTableCell4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrTableCell4.Text = "xrTableCell4";
            this.xrTableCell4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.xrTableCell4.Weight = 0.092479674796747971;
            // 
            // xrTableCell1
            // 
            this.xrTableCell1.Borders = ((DevExpress.XtraPrinting.BorderSide)((DevExpress.XtraPrinting.BorderSide.Right | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.xrTableCell1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.TenKH")});
            this.xrTableCell1.Name = "xrTableCell1";
            this.xrTableCell1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrTableCell1.Text = "xrTableCell1";
            this.xrTableCell1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.xrTableCell1.Weight = 0.37296747967479676;
            // 
            // xrTableCell2
            // 
            this.xrTableCell2.Borders = ((DevExpress.XtraPrinting.BorderSide)((DevExpress.XtraPrinting.BorderSide.Right | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.xrTableCell2.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.DiaChi")});
            this.xrTableCell2.Name = "xrTableCell2";
            this.xrTableCell2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrTableCell2.Text = "xrTableCell2";
            this.xrTableCell2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.xrTableCell2.Weight = 0.27947154471544716;
            // 
            // xrTableCell8
            // 
            this.xrTableCell8.Borders = ((DevExpress.XtraPrinting.BorderSide)((DevExpress.XtraPrinting.BorderSide.Right | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.xrTableCell8.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Mobile")});
            this.xrTableCell8.Name = "xrTableCell8";
            this.xrTableCell8.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrTableCell8.Text = "xrTableCell8";
            this.xrTableCell8.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.xrTableCell8.Weight = 0.12703252032520326;
            // 
            // xrTableCell3
            // 
            this.xrTableCell3.Borders = ((DevExpress.XtraPrinting.BorderSide)((DevExpress.XtraPrinting.BorderSide.Right | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.xrTableCell3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Mobile")});
            this.xrTableCell3.Name = "xrTableCell3";
            this.xrTableCell3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrTableCell3.Text = "xrTableCell3";
            this.xrTableCell3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.xrTableCell3.Weight = 0.0934958729317518;
            // 
            // tableCell1
            // 
            this.tableCell1.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.tableCell1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.xrCheckBox3,
                        this.xrCheckBox2,
                        this.xrCheckBox1});
            this.tableCell1.Name = "tableCell1";
            this.tableCell1.StylePriority.UseBorders = false;
            this.tableCell1.StylePriority.UseTextAlignment = false;
            this.tableCell1.Text = "tableCell1";
            this.tableCell1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleJustify;
            this.tableCell1.Weight = 0.076219698277915388;
            // 
            // xrCheckBox3
            // 
            this.xrCheckBox3.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.xrCheckBox3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("CheckState", null, "Table.IsKH")});
            this.xrCheckBox3.LocationFloat = new DevExpress.Utils.PointFloat(12.49988F, 0F);
            this.xrCheckBox3.Name = "xrCheckBox3";
            this.xrCheckBox3.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.xrCheckBox3.SizeF = new System.Drawing.SizeF(17.99976F, 25F);
            this.xrCheckBox3.StylePriority.UseBorders = false;
            // 
            // xrCheckBox2
            // 
            this.xrCheckBox2.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.xrCheckBox2.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("CheckState", null, "Table.IsNV")});
            this.xrCheckBox2.LocationFloat = new DevExpress.Utils.PointFloat(48.49933F, 0F);
            this.xrCheckBox2.Name = "xrCheckBox2";
            this.xrCheckBox2.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.xrCheckBox2.SizeF = new System.Drawing.SizeF(17.99976F, 25F);
            this.xrCheckBox2.StylePriority.UseBorders = false;
            this.xrCheckBox2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // xrCheckBox1
            // 
            this.xrCheckBox1.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.xrCheckBox1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("CheckState", null, "Table.IsNCC")});
            this.xrCheckBox1.LocationFloat = new DevExpress.Utils.PointFloat(30.49965F, 0F);
            this.xrCheckBox1.Name = "xrCheckBox1";
            this.xrCheckBox1.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 100F);
            this.xrCheckBox1.SizeF = new System.Drawing.SizeF(17.99976F, 25F);
            this.xrCheckBox1.StylePriority.UseBorders = false;
            this.xrCheckBox1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // xrLabel2
            // 
            this.xrLabel2.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.xrLabel2.LocationFloat = new DevExpress.Utils.PointFloat(883F, 25F);
            this.xrLabel2.Name = "xrLabel2";
            this.xrLabel2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel2.SizeF = new System.Drawing.SizeF(100F, 25F);
            this.xrLabel2.Text = "Người lập";
            this.xrLabel2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // xrLabel1
            // 
            this.xrLabel1.LocationFloat = new DevExpress.Utils.PointFloat(833.0001F, 0F);
            this.xrLabel1.Name = "xrLabel1";
            this.xrLabel1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel1.SizeF = new System.Drawing.SizeF(234F, 25F);
            this.xrLabel1.Text = "............, ngày.......tháng....... năm 20......";
            this.xrLabel1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // xrTable3
            // 
            this.xrTable3.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.xrTable3.LocationFloat = new DevExpress.Utils.PointFloat(8F, 0F);
            this.xrTable3.Name = "xrTable3";
            this.xrTable3.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 96F);
            this.xrTable3.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.xrTableRow3});
            this.xrTable3.SizeF = new System.Drawing.SizeF(1059F, 25F);
            this.xrTable3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // xrTableRow3
            // 
            this.xrTableRow3.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.xrTableCell15,
                        this.xrTableCell5,
                        this.xrTableCell11,
                        this.xrTableCell12,
                        this.xrTableCell7,
                        this.xrTableCell14,
                        this.xrTableCell13});
            this.xrTableRow3.Name = "xrTableRow3";
            this.xrTableRow3.Padding = new DevExpress.XtraPrinting.PaddingInfo(0, 0, 0, 0, 96F);
            this.xrTableRow3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            this.xrTableRow3.Weight = 1;
            // 
            // xrTableCell15
            // 
            this.xrTableCell15.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.xrTableCell15.Name = "xrTableCell15";
            this.xrTableCell15.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrTableCell15.Text = "STT";
            this.xrTableCell15.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.xrTableCell15.Weight = 0.032105760151085933;
            // 
            // xrTableCell5
            // 
            this.xrTableCell5.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Top | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.xrTableCell5.Name = "xrTableCell5";
            this.xrTableCell5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrTableCell5.Text = "Mã đối tượng";
            this.xrTableCell5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.xrTableCell5.Weight = 0.08593012275731822;
            // 
            // xrTableCell11
            // 
            this.xrTableCell11.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Top | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.xrTableCell11.Name = "xrTableCell11";
            this.xrTableCell11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrTableCell11.Text = "Tên đối tượng";
            this.xrTableCell11.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.xrTableCell11.Weight = 0.34655335221907457;
            // 
            // xrTableCell12
            // 
            this.xrTableCell12.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Top | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.xrTableCell12.Name = "xrTableCell12";
            this.xrTableCell12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrTableCell12.Text = "Địa chỉ";
            this.xrTableCell12.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.xrTableCell12.Weight = 0.25967894239848915;
            // 
            // xrTableCell7
            // 
            this.xrTableCell7.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Top | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.xrTableCell7.Name = "xrTableCell7";
            this.xrTableCell7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrTableCell7.Text = "Mã Số Thuế";
            this.xrTableCell7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.xrTableCell7.Weight = 0.11803588290840415;
            // 
            // xrTableCell14
            // 
            this.xrTableCell14.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Top | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.xrTableCell14.Name = "xrTableCell14";
            this.xrTableCell14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrTableCell14.Text = "SĐT";
            this.xrTableCell14.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.xrTableCell14.Weight = 0.08687440982058546;
            // 
            // xrTableCell13
            // 
            this.xrTableCell13.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Top | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.xrTableCell13.Name = "xrTableCell13";
            this.xrTableCell13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrTableCell13.Text = "Loại KH";
            this.xrTableCell13.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.xrTableCell13.Weight = 0.0708215297450425;
            // 
            // dataSet1
            // 
            this.dataSet1.DataSetName = "dataSet1";
            this.dataSet1.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // xtraReport1
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.ReportHeader,
                        this.Detail,
                        this.ReportFooter,
                        this.PageHeader,
                        this.topMarginBand1,
                        this.bottomMarginBand1});
            this.Landscape = true;
            this.Margins = new System.Drawing.Printing.Margins(15, 15, 25, 25);
            this.Name = "xtraReport1";
            this.PageHeight = 850;
            this.PageWidth = 1100;
            this.Version = "11.1";
            ((System.ComponentModel.ISupportInitialize)(this.xrTable1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.xrTable3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dataSet1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dataSet1 : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dataSet1 cln = ((dataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dataSet1";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dataSet1 ds = new dataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnMaKH;
            private global::System.Data.DataColumn columnTenKH;
            private global::System.Data.DataColumn columnTenKH2;
            private global::System.Data.DataColumn columnDiaChi;
            private global::System.Data.DataColumn columnDoiTac;
            private global::System.Data.DataColumn columnMST;
            private global::System.Data.DataColumn columnSDT;
            private global::System.Data.DataColumn columnMobile;
            private global::System.Data.DataColumn columnEmail;
            private global::System.Data.DataColumn columnFax;
            private global::System.Data.DataColumn columnTKNganHang;
            private global::System.Data.DataColumn columnNganHang;
            private global::System.Data.DataColumn columnIsNCC;
            private global::System.Data.DataColumn columnIsKH;
            private global::System.Data.DataColumn columnIsNV;
            private global::System.Data.DataColumn columnNhom1;
            private global::System.Data.DataColumn columnNhom2;
            private global::System.Data.DataColumn columnNhom3;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaKHColumn {
                get {
                    return this.columnMaKH;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenKHColumn {
                get {
                    return this.columnTenKH;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenKH2Column {
                get {
                    return this.columnTenKH2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiaChiColumn {
                get {
                    return this.columnDiaChi;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DoiTacColumn {
                get {
                    return this.columnDoiTac;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MSTColumn {
                get {
                    return this.columnMST;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SDTColumn {
                get {
                    return this.columnSDT;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TKNganHangColumn {
                get {
                    return this.columnTKNganHang;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NganHangColumn {
                get {
                    return this.columnNganHang;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsNCCColumn {
                get {
                    return this.columnIsNCC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsKHColumn {
                get {
                    return this.columnIsKH;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsNVColumn {
                get {
                    return this.columnIsNV;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nhom1Column {
                get {
                    return this.columnNhom1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nhom2Column {
                get {
                    return this.columnNhom2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nhom3Column {
                get {
                    return this.columnNhom3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(
                        string MaKH, 
                        string TenKH, 
                        string TenKH2, 
                        string DiaChi, 
                        string DoiTac, 
                        string MST, 
                        string SDT, 
                        string Mobile, 
                        string Email, 
                        string Fax, 
                        string TKNganHang, 
                        string NganHang, 
                        bool IsNCC, 
                        bool IsKH, 
                        bool IsNV, 
                        string Nhom1, 
                        string Nhom2, 
                        string Nhom3) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MaKH,
                        TenKH,
                        TenKH2,
                        DiaChi,
                        DoiTac,
                        MST,
                        SDT,
                        Mobile,
                        Email,
                        Fax,
                        TKNganHang,
                        NganHang,
                        IsNCC,
                        IsKH,
                        IsNV,
                        Nhom1,
                        Nhom2,
                        Nhom3};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaKH = base.Columns["MaKH"];
                this.columnTenKH = base.Columns["TenKH"];
                this.columnTenKH2 = base.Columns["TenKH2"];
                this.columnDiaChi = base.Columns["DiaChi"];
                this.columnDoiTac = base.Columns["DoiTac"];
                this.columnMST = base.Columns["MST"];
                this.columnSDT = base.Columns["SDT"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnEmail = base.Columns["Email"];
                this.columnFax = base.Columns["Fax"];
                this.columnTKNganHang = base.Columns["TKNganHang"];
                this.columnNganHang = base.Columns["NganHang"];
                this.columnIsNCC = base.Columns["IsNCC"];
                this.columnIsKH = base.Columns["IsKH"];
                this.columnIsNV = base.Columns["IsNV"];
                this.columnNhom1 = base.Columns["Nhom1"];
                this.columnNhom2 = base.Columns["Nhom2"];
                this.columnNhom3 = base.Columns["Nhom3"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaKH = new global::System.Data.DataColumn("MaKH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaKH);
                this.columnTenKH = new global::System.Data.DataColumn("TenKH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenKH);
                this.columnTenKH2 = new global::System.Data.DataColumn("TenKH2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenKH2);
                this.columnDiaChi = new global::System.Data.DataColumn("DiaChi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiaChi);
                this.columnDoiTac = new global::System.Data.DataColumn("DoiTac", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoiTac);
                this.columnMST = new global::System.Data.DataColumn("MST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMST);
                this.columnSDT = new global::System.Data.DataColumn("SDT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSDT);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnTKNganHang = new global::System.Data.DataColumn("TKNganHang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTKNganHang);
                this.columnNganHang = new global::System.Data.DataColumn("NganHang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNganHang);
                this.columnIsNCC = new global::System.Data.DataColumn("IsNCC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNCC);
                this.columnIsKH = new global::System.Data.DataColumn("IsKH", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsKH);
                this.columnIsNV = new global::System.Data.DataColumn("IsNV", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNV);
                this.columnNhom1 = new global::System.Data.DataColumn("Nhom1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNhom1);
                this.columnNhom2 = new global::System.Data.DataColumn("Nhom2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNhom2);
                this.columnNhom3 = new global::System.Data.DataColumn("Nhom3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNhom3);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataSet1 ds = new dataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaKH {
                get {
                    try {
                        return ((string)(this[this.table_Table.MaKHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaKH\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MaKHColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenKH {
                get {
                    try {
                        return ((string)(this[this.table_Table.TenKHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenKH\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TenKHColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenKH2 {
                get {
                    try {
                        return ((string)(this[this.table_Table.TenKH2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenKH2\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TenKH2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiaChi {
                get {
                    try {
                        return ((string)(this[this.table_Table.DiaChiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiaChi\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DiaChiColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DoiTac {
                get {
                    try {
                        return ((string)(this[this.table_Table.DoiTacColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoiTac\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DoiTacColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MST {
                get {
                    try {
                        return ((string)(this[this.table_Table.MSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MST\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MSTColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SDT {
                get {
                    try {
                        return ((string)(this[this.table_Table.SDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SDT\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SDTColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.table_Table.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MobileColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmailColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.table_Table.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fax\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FaxColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TKNganHang {
                get {
                    try {
                        return ((string)(this[this.table_Table.TKNganHangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TKNganHang\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TKNganHangColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NganHang {
                get {
                    try {
                        return ((string)(this[this.table_Table.NganHangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NganHang\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NganHangColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNCC {
                get {
                    try {
                        return ((bool)(this[this.table_Table.IsNCCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNCC\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IsNCCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKH {
                get {
                    try {
                        return ((bool)(this[this.table_Table.IsKHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsKH\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IsKHColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNV {
                get {
                    try {
                        return ((bool)(this[this.table_Table.IsNVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNV\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IsNVColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nhom1 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Nhom1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nhom1\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Nhom1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nhom2 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Nhom2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nhom2\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Nhom2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nhom3 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Nhom3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nhom3\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Nhom3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaKHNull() {
                return this.IsNull(this.table_Table.MaKHColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaKHNull() {
                this[this.table_Table.MaKHColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenKHNull() {
                return this.IsNull(this.table_Table.TenKHColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenKHNull() {
                this[this.table_Table.TenKHColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenKH2Null() {
                return this.IsNull(this.table_Table.TenKH2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenKH2Null() {
                this[this.table_Table.TenKH2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiaChiNull() {
                return this.IsNull(this.table_Table.DiaChiColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiaChiNull() {
                this[this.table_Table.DiaChiColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoiTacNull() {
                return this.IsNull(this.table_Table.DoiTacColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoiTacNull() {
                this[this.table_Table.DoiTacColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSTNull() {
                return this.IsNull(this.table_Table.MSTColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSTNull() {
                this[this.table_Table.MSTColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSDTNull() {
                return this.IsNull(this.table_Table.SDTColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSDTNull() {
                this[this.table_Table.SDTColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.table_Table.MobileColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.table_Table.MobileColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.table_Table.EmailColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.table_Table.EmailColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.table_Table.FaxColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.table_Table.FaxColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTKNganHangNull() {
                return this.IsNull(this.table_Table.TKNganHangColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTKNganHangNull() {
                this[this.table_Table.TKNganHangColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNganHangNull() {
                return this.IsNull(this.table_Table.NganHangColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNganHangNull() {
                this[this.table_Table.NganHangColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsNCCNull() {
                return this.IsNull(this.table_Table.IsNCCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsNCCNull() {
                this[this.table_Table.IsNCCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsKHNull() {
                return this.IsNull(this.table_Table.IsKHColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsKHNull() {
                this[this.table_Table.IsKHColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsNVNull() {
                return this.IsNull(this.table_Table.IsNVColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsNVNull() {
                this[this.table_Table.IsNVColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNhom1Null() {
                return this.IsNull(this.table_Table.Nhom1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNhom1Null() {
                this[this.table_Table.Nhom1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNhom2Null() {
                return this.IsNull(this.table_Table.Nhom2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNhom2Null() {
                this[this.table_Table.Nhom2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNhom3Null() {
                return this.IsNull(this.table_Table.Nhom3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNhom3Null() {
                this[this.table_Table.Nhom3Column] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
