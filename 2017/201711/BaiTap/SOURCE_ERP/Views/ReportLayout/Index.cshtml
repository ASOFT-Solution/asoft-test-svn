@using ASOFT.ERP.A00.Core;
@using ASOFT.ERP.A00.Entities.Common;

@{
    string bar = ViewBag.TitleBar;
    ViewBag.Title = Html.ASOFTPageTitle(bar, Model[0].ScreenID).ToHtmlString();
}
@model List<ASOFT.ERP.ViewModel.ASOFTsysReportGroupViewModel>

<div id="contentMaster">
    @Html.ASOFTHeader(new HeaderModel() { Title = ViewBag.Title, Breakcrumb = true })

    @{int col = Model.Count / 2;
      int CurrentModel = 0;
      for (int i = 0; i < col; i++)
      {
          @Html.Raw("<div class='full-fieldset'>")
          @Html.Raw("<div class='block-left'>")
          @(Html.ASOFTPanel()
                .Name(Model[CurrentModel].GroupID)
                .HtmlAttributes(new { @class = "block-panel-master" })
                .Animation(animation => animation.Enable(true))
                .Items(panelbar => panelbar.Add().Text(Model[CurrentModel].GroupLanguage)
                                        .HtmlAttributes(new { @class = "block-panel-master-header" })
                                        .Expanded(true).Content(Html.Partial("GridReportLayout", Model[CurrentModel]).ToHtmlString())
                      )
              )
          @Html.Raw("</div>")
          @Html.Raw("<div class='block-right'>")
          CurrentModel++;
          @(Html.ASOFTPanel()
                .Name(Model[CurrentModel].GroupID)
                .HtmlAttributes(new { @class = "block-panel-master" })
                .Animation(animation => animation.Enable(true))
                .Items(panelbar => panelbar.Add().Text(Model[CurrentModel].GroupLanguage)
                                        .HtmlAttributes(new { @class = "block-panel-master-header" })
                                        .Expanded(true).Content(Html.Partial("GridReportLayout", Model[CurrentModel]).ToHtmlString())
                      )
              )
          @Html.Raw("</div>")
          @Html.Raw("</div>")
          CurrentModel++;
      }
      if(Model.Count % 2 == 1)
      {
          @Html.Raw("<div class='full-fieldset'>");
          @Html.Raw("<div class='block-left'>");
          @(Html.ASOFTPanel()
                .Name(Model[CurrentModel].GroupID)
                .HtmlAttributes(new { @class = "block-panel-master" })
                .Animation(animation => animation.Enable(true))
                .Items(panelbar => panelbar.Add().Text(Model[CurrentModel].GroupLanguage)
                                        .HtmlAttributes(new { @class = "block-panel-master-header" })
                                        .Expanded(true).Content(Html.Partial("GridReportLayout", Model[CurrentModel]).ToHtmlString())
                      )
              )
          @Html.Raw("</div>")
          @Html.Raw("</div>")
      }
      }

</div>
@Html.Hidden("Module", Model[0].Module)
@Html.Hidden("ScreenID", Model[0].ScreenID)
@*@section jsFeature {
    <script src="@Url.Content("~/Areas/POS/Scripts/POSF0047.js")" type="text/javascript"></script>
}*@

@section styleFeature
 {
    <link id="RWDReport"  href="@Url.Content("~/Content/Styles/RWD/Report/ReportRWD.css" +"?v="+ASOFTEnvironment.Version)" rel="stylesheet" type="text/css" />
}

@{
    if(ASOFTEnvironment.ModuleID == ASOFTConstants.MODULE_CRM) {
        <link href="@Url.Content("~/Areas/CRM/Content/CRMReport.css" +"?v="+ASOFTEnvironment.Version)" rel="stylesheet" type="text/css" />
    }
}


<script>
    var listReport = null;
    function getFilter_Click(e) {
        var gridElement = $(e).closest('.asf-grid');
        grid = ASOFT.asoftGrid.castName(gridElement.attr('id'));
        var row = $(e).parent().closest('tr');
        var selectedRecord = grid.dataItem(row);

        if (selectedRecord.length == 0) {
            ASOFT.dialog.messageDialog(ASOFT.helper.getMessage('00ML000066'/*'A00ML000003'*/));
            return;
        }

        var data = {};
        //var postUrl = ASOFT.helper.renderUrl('/POS/' + selectedRecord.FormID, data);
        data = { ReportID: selectedRecord.ReportID, Area: selectedRecord.ModuleID, ScreenID: selectedRecord.ScreenID };
        var postUrl = ASOFT.helper.renderUrl('/ReportLayout/GetFilterScreen', data);

        listReport = [];

        listReport.push(selectedRecord.ReportID, selectedRecord.ReportName, selectedRecord.Description);
        // [2] Render iframe
        ASOFT.asoftPopup.showIframe(postUrl, {});
    }

    function returnReport() {
        return listReport;
    }

    function genLanguageReport(e, area, src) {
        var str;
        ASOFT.helper.postTypeJson('/ReportLayout/GenLanguageReport', { args: e, area: area, src: src }, function (result) {
            str = result;
        });
        return str;
    }
</script>

