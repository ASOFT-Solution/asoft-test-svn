@*
//####################################################################
//# Copyright (C) 2010-2011, ASoft JSC.  All Rights Reserved. 
//#
//# History:
//#     Date Time       Updater         Comment
//#     06/06/2014      Thai Son        Tạo Mới
//####################################################################
*@
@using ASOFT.ERP.A00.Entities.Common
@using ASOFT.ERP.A00.Core
@using ASOFT.ERP.A00.Core.Control
@using ASOFT.ERP.ViewModel.POS
@using ASOFT.ERP.A00.Entities.Database
@using ASOFT.ERP.ViewModel

@model ASOFT.ERP.ViewModel.ASOFTViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string DETAIL_TAB_PREFIX = "DetailTab";
    string MASTER_PANEL_PREFIX = "MasterPanel";
    Queue<string> PanelNameQueue = ViewBag.PanelNameQueue as Queue<string>;
    Queue<string> TabNameQueue = ViewBag.TabNameQueue as Queue<string>;
}

@helper tableHeader(string _panelName)
{
    <table class="asf-table-view">
        <thead>
            <tr class="tr-zero-height">
                <td class="asf-td-label-left"></td>
                <td class="asf-td-label-right"></td>
            </tr>
        </thead>
        <tbody>
            @RenderSection(_panelName)
        </tbody>
    </table>
}

@RenderBody()

@{
    int indexer = 1;
    bool selected = true;
    List<string> panels = new List<string>();
    string panelName = string.Format("{0}{1}", MASTER_PANEL_PREFIX, indexer);
    while (IsSectionDefined(panelName))
    {

        var helper = tableHeader(panelName).ToHtmlString();
        panels.Add(helper);
        panelName = string.Format("{0}{1}", MASTER_PANEL_PREFIX, ++indexer);
    }
}
@using (Html.BeginForm(null, null, FormMethod.Post, new
{
    id = Model.ScreenID
}))
{
    <div id='contentMaster'>
        @Html.ASOFTHeader(new HeaderModel
{
    Title = ViewBag.Title,
    Breakcrumb = true
})
        @{
    string additionnalCSS = "";
    if (Model.Toolbar1 == null)
    {
        additionnalCSS = "asf-auto-height";
        Model.Toolbar1 = new ASOFTToolBarViewModel();
    }
        }

        <div id="mtf1042-viewmastercontent">
            <div id="ViewMaster" class="asf-panel-view-master-detail mtf1042-view-master">
                <div class="asf-panel-master-header @additionnalCSS">
                      @{
                            if(Model.Action != null && Model.Action.ListAction != null)
                            {
                                @Html.Partial("~/Views/Shared/Action/Action.cshtml", Model.Action)
                            }
                      }
                    <div class="asfbtn asfbtn-right">
                        @Html.Partial("~/Views/Shared/EditorTemplates/Toolbar.cshtml",
                        Model.Toolbar1)
                    </div>
                </div>
                <div class="asf-master-content">
                    @(Html.ASOFTPanel()
                    .Name("panelbar")
                    .Items(panelbar =>
                    {
                        indexer = 0;
                        foreach (var panel in panels)
                        {
                            panelbar
                                .Add()
                                .HtmlAttributes(new
                                    {
                                        @class = "block-panel-master-header"
                                    })
                                .Expanded(true)
                                .Content(panel)
                                .Text(PanelNameQueue.Dequeue())
                                ;
                        }
                    }))
                </div>
            </div>
            <div id="viewdetail" class="asf-panel-view-detail">
                <div class="asfbtn asfbtn-right">
                    @Html.Partial("~/Views/Shared/EditorTemplates/Toolbar.cshtml",
                    Model.Toolbar2 ?? new ASOFTToolBarViewModel())
                </div>
                @(Html.ASOFTTab()
                .Name("Tabs")
                .Items(tabstrip =>
                {
                    indexer = 1;
                    string tabName = string.Format("{0}{1}", DETAIL_TAB_PREFIX, indexer);
                    selected = true;

                    while (IsSectionDefined(tabName))
                    {
                        tabstrip
                            .Add()
                            .HtmlAttributes(new
                                {
                                    id = "asf-detail"
                                })
                            .Selected(selected)
                            .ContentHtmlAttributes(new
                                {
                                    @class = "asf-tab-content"
                                })
                            .Content(RenderSection(tabName).ToHtmlString())
                            .Text(TabNameQueue.Dequeue())
                            ;

                        selected = false;
                        tabName = string.Format("{0}{1}", DETAIL_TAB_PREFIX, ++indexer);
                    }
                })
)
            </div>
        </div>
        <div class="container_12 asf-form-button">
            <ul class="empty">
                <li></li>
            </ul>
        </div>

    </div>
}
@RenderSection("jsFeature", required: false)
@RenderSection("styleFeature", required: false)

<link id="RWDMasterDetail400" href="@Url.Content("~/Content/Styles/RWD/ViewMasterDetail/asoftRWD480pxViewMaster.css")" rel="stylesheet" type="text/css" />
<link id="RWDMasterDetail600" href="@Url.Content("~/Content/Styles/RWD/ViewMasterDetail/asoftRWD600pxViewMaster.css")" rel="stylesheet" type="text/css" />



