@*
//####################################################################
//# Copyright (C) 2010-2011, ASoft JSC.  All Rights Reserved.
//#
//# History:
//#     Date Time       Created         Comment
//#     09/10/2014      Hoàng Tú       Tạo mới
//####################################################################
*@
@using System.Web.UI.WebControls;
@using ASOFT.ERP.A00.Core;
@using ASOFT.ERP.A00.Entities.Database
@model ASOFT.ERP.ViewModel.CI.CIF1021ViewModel
@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
    ViewBag.Title = @Html.ASOFTPageTitle(@Html.PopupEditTitle(m => m.Title), "CIF1021").ToHtmlString();
    ViewBag.Width = 500;
}
<div class="asf-form-container">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "CIF1021" }))
    {
        <span class="asf-disabled-visibility">
            @Html.ASOFTTextBox(model => model.LastModifyDateValue)
        </span>
        <div class="asf-form-container">
            <div class="form-content">
                <table class="asf-table-view">
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.DutyID)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTTextBox(model => model.DutyID, htmlAttribute: new { initValue = Model.DutyID }, checkRegularExp: true)
                                 .ReadOnlyIf(Model.FormStatus != ASOFTFormActionType.AddNew))
                            @* Or *@
                            @* @if (Model.FormStatus == ASOFTFormActionType.AddNew)
                            {
                                @Html.ASOFTTextBox(model => model.DutyID,
                                htmlStyle: new { width = Unit.Percentage(100) },checkRegularExp:true)
                            }
                            else
                            {
                                @(Html.ASOFTTextBox(model => model.DutyID,
                                                htmlStyle: new
                                                {
                                                    width = Unit.Percentage(100),
                                                    title = "..."
                                                }).DisabledIf(true))
                            }*@
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.DutyName)</td>
                        <td class="asf-td-field" colspan="2">
                            @Html.ASOFTTextBox(model => model.DutyName,
                            htmlStyle: new { width = Unit.Percentage(100) })
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.DutyRate)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTSpinEdit(model => model.DutyRate,
                                        htmlStyle: new
                                        {
                                            width = Unit.Percentage(100)
                                        })
                                .Max(9999999999)
                                .Min(0))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption"></td>
                        <td class="asf-td-field" colspan="2">
                            @if (Model.FormStatus == ASOFTFormActionType.AddNew)
                            { }
                            else
                            {
                                @Html.ASOFTCheckbox(model => model.Disabled)
                            }
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="asf-form-button">
            <table class="asf-table-view">
                <tr>
                    <td align="right">
                        <div class="asf-popup-button-container">
                            @if (Model.FormStatus == ASOFTFormActionType.AddNew)
                            {
                                bool hasPermission = false;
                                if (Model.AllowAdd())
                                {
                                    hasPermission = true;
                                }

                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnClose"))
                              .Name("BtnClose")
                             .Events(e => e.Click(hasPermission ? "popupClose_Click" : "ASOFT.asoftPopup.closeOnly")))
                                </div>

                                <div>@(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveCopy"))
                                .Name("CIF1021SaveCopy")
                                .Events(m => m.Click("CIF1021SaveCopy_Click"))
                                .Enable(hasPermission))
                                </div>
                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveNew"))
                                .Name("CIF1021SaveNew")
                                .Events(m => m.Click("CIF1021SaveNew_Click"))
                                .Enable(hasPermission)
                             )
                                </div>

                            }
                            else
                                if (Model.FormStatus != ASOFTFormActionType.AddNew)
                                {
                                    bool hasPermission = false;
                                    if (Model.CheckPermission("CIF1021", ASOFTPermission.Update))
                                    {
                                        hasPermission = true;
                                    }

                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnClose"))
                                 .Name("BtnClose")
                                .Events(e => e.Click(hasPermission ? "popupClose_ClickA" : "ASOFT.asoftPopup.closeOnly")))
                                </div>
                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSave"))
                                  .Name("CIF1021bUpdate")
                                  .Events(e => e.Click("CIF1021btnUpdate_Click"))
                                  .Enable(hasPermission))
                                </div>

                                }
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    }
</div>
@Html.ASOFTHidden("CIF1021Default", string.Empty)
@section jsFeature
    {
    <script src="@Url.Content("~/Areas/CI/Scripts/CIF1021.js?v=" + ASOFTEnvironment.Version)" type="text/javascript"></script>
}