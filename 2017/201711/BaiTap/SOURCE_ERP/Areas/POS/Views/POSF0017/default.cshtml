@*
//####################################################################
//# Copyright (C) 2010-2011, ASoft JSC.  All Rights Reserved. 
//#
//# History:
//#     Date Time       Updater         Comment
//#     27/03/2013      Thai Son        Add heading
//#     25/04/2013      Thai Son        Update release
//####################################################################
*@

@model ASOFT.ERP.ViewModel.POS.POSF00171ViewModel

@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
    ViewBag.Title = Html.ASOFTPageTitle(model => model.TitleUpdate,"POSF00171").ToHtmlString();    
    ViewBag.Width = 1100;
    string hidden = "asf-disabled-visibility";
    DateTime voucherDate = Model.VoucherDate.Value;
}

@using (Html.BeginForm(null, null, FormMethod.Post, new
{
    id = "POSF00171"
}))
{
    <span class="asf-disabled-visibility">
        @Html.ASOFTHidden(m => m.APK)
        @Html.ASOFTHidden(m => m.LastModifyDateValue)
        @Html.TextBox("VoucherDateFilter", Model.VoucherDate.Value.Ticks)
        @Html.TextBox("ShopID", (string)ViewBag.ShopID)
    </span>
    <div class="asf-form-container container_12 pagging_bottom ">
        <div class="grid_4 alpha float_left line_right">
            <table class="asf-table-view">
                <tr>
                    <td class="container_label">
                        @Html.ASOFTLabel(model => model.VoucherDate)

                    </td>
                    <td class="container_control">
                        @Html.ASOFTDateEdit(model => model.VoucherDate,
                                        htmlStyle: new
                                               {
                                                   width = Unit.Percentage(100)
                                               })
                    </td>
                </tr>
                <tr>
                    <td>@Html.ASOFTLabel(model => model.VoucherNo)</td>
                    <td>
                        @Html.ASOFTTextBox(model => model.VoucherNo,
                        htmlStyle: new
                       {
                           width = Unit.Percentage(100)
                       })
                    </td>
                </tr>
                <tr>
                    <td>@Html.ASOFTLabel(model => model.EmployeeID)</td>
                    <td>
                        @(Html.ASOFTBussinessComboBox()
                              .ASOFTEmployeeID(model => model.EmployeeName,
                              htmlAttributes: new Dictionary<string, object> {
                                                    {"data-bind","value:EmployeeID"}},
                              htmlStyle: new
                              {
                                  width = Unit.Percentage(100)
                              })
                              .Events(e => e.Cascade("cboEmployeeID_Cascade")
                              )
                        )
                    </td>
                </tr>
                <tr>
                    <td>@Html.ASOFTLabel(model => model.Description)

                    </td>
                    <td>
                        @Html.ASOFTTextBox(model =>
                        model.Description, htmlStyle: new
                           {
                               width = Unit.Percentage(100)
                           })
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                </tr>
            </table>
        </div>
        <div class="grid_8 omega float_right">
            <span class ="@hidden">
                @Html.ASOFTLabel(model => model.IntentoryOrBardcode)
            </span>
            <table class="asf-table-view">
                <tr>
                    <td></td>
                </tr>
                <tr>
                    <td></td>
                </tr>
                <tr>
                    <td>
                        @{
    //string headerTemplate = ASOFTBussinessControl.CreateHeaderTemplate(Model.InventoryColumn);
    string headerTemplate = @"<ul class='k-list asf-combo-item-header'><li class='k-item asf-combo-item-header-text'><div class='asf-combo-item'><div style='width:200px' class='k-state-default asf-combo-item-col-value'>Mã hàng hóa</div><div style='width:400px' class='k-state-default asf-combo-item-col-text'>Tên hàng hóa</div></div></div></ul>";
    //string itemTemplate = ASOFTBussinessControl.CreateItemTemplate(Model.InventoryColumn);  
    string itemTemplate = @"<div class='asf-combo-item'><div style='width:200px' class='k-state-default asf-combo-item-col-value'>${InventoryID}</div><div style='width:340px' class='k-state-default asf-combo-item-col-text'>${InventoryName}</div></div>";
                        }


                        @(Html.Kendo().AutoCompleteFor(model => model.InventoryID)
                      .HighlightFirst(true)
                      .Animation(animation => animation.Enable(false))
                      .HtmlAttributes(new Dictionary<string, Object> {
                          {"class","post-autocomplete"}, 
                          {"height","32px"},
                          {"data-bind", "value: InventoryID"},
                          {"style", "font-size: 14px"}
                      })
                      .MinLength(0)
                      .DataTextField(ASOFT.ERP.POS.Entities.POSF001711.COL_INVENTORYID)
                      .Filter("contains")
                      .HeaderTemplate(headerTemplate)
                      .Template(itemTemplate)
                      .Name("InventoryID")

                      )
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="asf-form-container container_12">
        @Html.Partial("GridVoucherDetail")
    </div>
        <div class="clearfix"></div>
        <div class="asf-form-button">
            <table class="asf-table-view">
                <tr>
                    <td>@*align="right"*@
                        <div class="asf-popup-button-container">
                            @if (Model.FormStatus == ASOFTFormActionType.AddNew)                            
                            {
                                bool hasPermission = false;
                                if (Model.AllowAdd())
                                {
                                    hasPermission = true;
                                }                                           
                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnClose"))
                                          .Name("btnClose")
                                          .Events(e => e.Click(hasPermission? "btnClose_Click" : "ASOFT.asoftPopup.closeOnly")))
                                </div>
                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveCopy"))
                                          .Name("btnSaveCopy")
                                          .Events(e => e.Click("btnSaveCopy_Click"))
                                          .Enable(hasPermission)
                                          )

                                </div>
                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveNew"))
                                          .Name("btnSaveNew")
                                          .Events(e => e.Click("btnSaveNew_Click"))
                                          .Enable(hasPermission))

                                </div>
                            }
                            else
                            {
                               
                                bool hasPermission = false;
                                if (Model.AllowUpdate())
                                {
                                    hasPermission = true;
                                }                                
                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnClose"))
                                          .Name("btnClose")                                          
                                          .Events(e => e.Click(hasPermission? "btnClose_Click" : "ASOFT.asoftPopup.closeOnly")))
                                </div>
                                
                                
                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSave"))
                                          .Name("btnUpdate")
                                          .Events(e => e.Click("btnUpdate_Click"))
                                          .Enable(hasPermission))
                                          

                                </div>
                            }
                        </div>
                    </td>
                </tr>
            </table>
        </div>
}
@section styleFeature{
    <link href="@Url.Content("~/Areas/POS/Content/POSF00171.css")" rel="stylesheet" type="text/css" />
}

@section jsFeature {
    <script src="@Url.Content("~/Areas/POS/Scripts/POSF00171Default.js")" type="text/javascript"></script>
}