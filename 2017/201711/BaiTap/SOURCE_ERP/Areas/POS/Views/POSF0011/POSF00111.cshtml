@*
//####################################################################
//# Copyright (C) 2010-2011, ASoft JSC.  All Rights Reserved. 
//#
//# History:
//#     Date Time       Updater         Comment
//#     31/03/2013      Thai Son        Tạo mới
//####################################################################
*@
@model ASOFT.ERP.ViewModel.POS.POSF00111ViewModel
@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
    //string hidden = string.Empty;
    ViewBag.Title = Html.ASOFTPageTitle(model => model.TitleUpdate, "POSF00111").ToHtmlString();
    //hidden = "asf-disabled-visibility";
    ViewBag.Width = 1000;
    bool KINGCOM = Model.CustomerIndex != 32;
}


@helper TabMemberInfo()
{
    @Html.Partial("TabMemberInfo")
}

@helper TabGridCard()
{    
    @Html.Partial("TabGridCard")
}


<div class="asf-form-container">
    @using (Html.BeginForm(null, null, FormMethod.Post, new
    {
        id = "POSF00111"
    }))
    {
        @*if (Model.IsKINGCOM())
        {
             @Html.Partial("TabMemberInfo")
        }
        else
        {*@
            @(Html.ASOFTTab()
            .Name("POSF00111Tab")
            .Items(tabstrip =>
            {
                tabstrip.Add().Text(@Html.ASOFTRaw(m => m.TitleA).ToString().ToUpper())
                    .Selected(true)
                    .HtmlAttributes(new
                    {
                        @id = "TabstripMaster-1"
                    })
                    .ContentHtmlAttributes(new
                    {
                        @class = "asf-tab-content"
                    })
                    .Content(this.TabMemberInfo().ToHtmlString());

                tabstrip.Add().Text(@Html.ASOFTRaw(m => m.TitleB).ToString().ToUpper())
                .HtmlAttributes(new
                {
                    @id = "TabstripMaster-2"
                })

                .ContentHtmlAttributes(new
                {
                    style = "height:280px;"
                })
                .Content(this.TabGridCard().ToHtmlString());
            }))
        @*}*@
        <div class="asf-form-button">
            <table class="asf-table-view">
                <tr>
                    <td>
                        <div class="asf-popup-button-container">
                            @if (Model.FormStatus == ASOFTFormActionType.AddNew)
                            {
                                bool hasPermission = false;
                                if (Model.AllowAdd())
                                {
                                    hasPermission = true;
                                }                                           
                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnClose"))
                                          .Name("btnClose")
                                          .Events(e =>
                                              e.Click(hasPermission ? "btnSaveClose_Click" : "ASOFT.asoftPopup.closeOnly")))
                                </div>
                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveCopy"))
                                          .Name("btnSaveCopy")
                                          .Events(e => e.Click("btnSaveCopy_Click"))
                                          .Enable(hasPermission)
                                          )

                                </div>
                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveNew"))
                                          .Name("btnSaveContinue")
                                          .Events(e => e.Click("btnSaveContinue_Click"))
                                          .Enable(hasPermission))

                                </div>
                            }
                            else
                            {

                                bool hasPermission = false;
                                if (Model.CheckPermission("POSF00111", ASOFTPermission.Update))
                                {
                                    hasPermission = true;
                                }                                
                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnClose"))
                                          .Name("btnClose")
                                          .Events(e =>
                                              e.Click(hasPermission ? "btnClose_Click" : "ASOFT.asoftPopup.closeOnly")))
                                </div>
                                
                                
                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSave"))
                                          .Name("btnSave")
                                          .Events(e => e.Click("btnSave_Click"))
                                          .Enable(hasPermission))


                                </div>
                            }
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    }
</div>

@section jsFeature {
    <script src="@Url.Content("~/Areas/POS/Scripts/POSF00111.js")" type="text/javascript"></script>
}

@section styleFeature{
    <link href="@Url.Content("~/Areas/POS/Content/POSF00111.css")" rel="stylesheet" type="text/css" />
}