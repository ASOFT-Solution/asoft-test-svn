@using Kendo.Mvc.UI;
@using ASOFT.ERP.A00.Core.Control;
@using ASOFT.ERP.A00.Core;

@model ASOFTChartSetting
@{
    Dictionary<int, Dictionary<string, string>> a = new Dictionary<int, Dictionary<string, string>>();

    a.AsEnumerable();
    }
<div class="asf-block-toolbar">
    <div class="asf-block-title">Biểu đồ doanh số khu vực</div>
    <ul class="asf-toolbar">
        <li><a class="asfbtn-item-32  k-button k-button-icon" id="" style="" title="Thay đổi kích thước" data-role="button" role="button" aria-disabled="false" tabindex="0"><span class="k-sprite asf-icon asf-icon-32 asf-i-magnify-add"></span></a></li>
        <li><a class="asfbtn-item-32  k-button k-button-icon" id="" style="" title="Làm mới" data-role="button" role="button" aria-disabled="false" tabindex="0"><span class="k-sprite asf-icon asf-icon-32 asf-i-refresh"></span></a></li>
        <li><a class="asfbtn-item-32  k-button k-button-icon" id="" style="" title="Thiết lập" data-role="button" role="button" aria-disabled="false" tabindex="0"><span class="k-sprite asf-icon asf-icon-32 asf-i-cogs-32"></span></a></li>
        <li><a class="asfbtn-item-32  k-button k-button-icon" id="" style="" title="Xóa" data-role="button" role="button" aria-disabled="false" tabindex="0"><span class="k-sprite asf-icon asf-icon-32 asf-i-delete"></span></a></li>
    </ul>
</div>
<div class="asf-block-content">
    @(Html.Kendo().Chart()
        .Name("Chart06")
        .Legend(legend => legend
            .Position(ChartLegendPosition.Bottom)
        )
        .ChartArea(chartArea => chartArea
            .Background("transparent")
            .Height(100)
        )
        .SeriesDefaults(seriesDefaults =>
            seriesDefaults.Line().Style(ChartLineStyle.Normal)
                .Labels(label => label.Visible(true).Format(ASOFTUtilities.FormatNumberDecimalDisplay(ASOFTEnvironment.PercentDecimal)).Background("transparent"))
        )
        .Series(series =>
        {
            series.Column(new double[] { 1, 3, 4, 5, 6, 7, 8, 9, 2, 12, 11, 12 });
            series.Column(new double[] { 1, 3, 4, 5, 6, 7, 8, 9, 2, 12, 11, 12 });
        })
        .CategoryAxis(axis => axis
            .Categories("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12")
            .MajorGridLines(lines => lines.Visible(false))
            .Labels(false)
            .Visible(false)
        )
        .ValueAxis(axis => axis
            .Numeric().Labels(labels => labels.Format("{0:#,##0.0}"))
            .Line(line => line.Visible(false))
            .AxisCrossingValue(-10)
        )
        .HtmlAttributes(new { style = "width: 100%;" })
        .Tooltip(tooltip => tooltip
            .Visible(false)
            .Format("{0:#,##0.0}")).RenderAs(RenderingMode.SVG)
    )
   
</div>