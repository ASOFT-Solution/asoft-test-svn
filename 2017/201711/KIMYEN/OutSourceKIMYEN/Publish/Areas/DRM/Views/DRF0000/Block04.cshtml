@model ASOFTChartSetting

<div class="asf-block-toolbar">
    <div class="asf-block-title">@Model.Title</div>
    <ul class="asf-toolbar">
        <li><a class="asfbtn-item-32  k-button k-button-icon" id="" style="" title="Thay đổi kích thước" data-role="button" role="button" aria-disabled="false" tabindex="0"><span class="k-sprite asf-icon asf-icon-32 asf-i-magnify-add"></span></a></li>
        <li><a class="asfbtn-item-32  k-button k-button-icon" id="" style="" title="Làm mới" data-role="button" role="button" aria-disabled="false" tabindex="0"><span class="k-sprite asf-icon asf-icon-32 asf-i-refresh"></span></a></li>
        <li><a class="asfbtn-item-32  k-button k-button-icon" id="" style="" title="Thiết lập" data-role="button" role="button" aria-disabled="false" tabindex="0"><span class="k-sprite asf-icon asf-icon-32 asf-i-cogs-32"></span></a></li>
        <li><a class="asfbtn-item-32  k-button k-button-icon" id="" style="" title="Xóa" data-role="button" role="button" aria-disabled="false" tabindex="0"><span class="k-sprite asf-icon asf-icon-32 asf-i-delete"></span></a></li>
    </ul>
</div>
<div class="asf-block-content">   
    @(Html.Kendo().Chart()
        .Name(Model.Name)
        .Legend(legend => legend
            .Position(ChartLegendPosition.Bottom)
        )
        .ChartArea(chartArea => chartArea
            .Background("transparent")
            .Height(300)
        )
        .SeriesDefaults(seriesDefaults => 
            seriesDefaults.Line().Style(ChartLineStyle.Normal)
                .Labels(label=>label.Visible(true).Format(ASOFTUtilities.FormatNumberDecimalDisplay(ASOFTEnvironment.PercentDecimal)).Background("transparent"))
        )
        .Series(series =>
        {
            foreach (var item in Model.KeyValueSeries)
            {
                series.Line(item.Value).Name(item.Key);
            }
        })
        .CategoryAxis(axis => axis
            .Categories(Model.LabelCategories)
            .MajorGridLines(lines => lines.Visible(true))
        )
        .ValueAxis(axis => axis
            .Numeric().Labels(labels => labels.Format("{0}%"))
            .Line(line => line.Visible(true))
            .AxisCrossingValue(-10)
        )
        .HtmlAttributes(new { style = "width: 100%;" })
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Format("{0}%")).RenderAs(RenderingMode.SVG)
    ) 
</div>