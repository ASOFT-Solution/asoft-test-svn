@model ASOFTChartSetting

<div class="asf-block-toolbar">
    <div class="asf-block-title">@Model.Title</div>
    <ul class="asf-toolbar">
        <li><a class="asfbtn-item-32  k-button k-button-icon" id="" style="" title="Thay đổi kích thước" data-role="button" role="button" aria-disabled="false" tabindex="0"><span class="k-sprite asf-icon asf-icon-32 asf-i-magnify-add"></span></a></li>
        <li><a class="asfbtn-item-32  k-button k-button-icon" id="" style="" title="Làm mới" data-role="button" role="button" aria-disabled="false" tabindex="0"><span class="k-sprite asf-icon asf-icon-32 asf-i-refresh"></span></a></li>
        <li><a class="asfbtn-item-32  k-button k-button-icon" id="" style="" title="Thiết lập" data-role="button" role="button" aria-disabled="false" tabindex="0"><span class="k-sprite asf-icon asf-icon-32 asf-i-cogs-32"></span></a></li>
        <li><a class="asfbtn-item-32  k-button k-button-icon" id="" style="" title="Xóa" data-role="button" role="button" aria-disabled="false" tabindex="0"><span class="k-sprite asf-icon asf-icon-32 asf-i-delete"></span></a></li>
    </ul>
</div>
<div class="asf-block-content">
@(Html.Kendo().Chart()
    .Name(Model.Name)
    .Title(title => title
        .Text(Model.Title)
        .Background("transparent")
        .Visible(false)
        .Position(ChartTitlePosition.Top)
        .Align(ChartTextAlignment.Left))
    .Legend(legend => legend
        .Position(ChartLegendPosition.Bottom)
    )
    .ChartArea(chartArea => chartArea
        .Background("transparent")
        .Height(300)
    )
    .Series(series => 
    {
        foreach (var item in Model.KeyValueSeries)
        {
            series.Column(item.Value).Name(item.Key);
        }
    })
    .CategoryAxis(axis => axis
        .Name("series-axis")
        .MajorGridLines(line => line.Visible(true))
        .Line(line => line.Visible(true))
    )
    .CategoryAxis(axis => axis
        .Name("label-axis")
        .Categories(Model.LabelCategories)
        .Labels(labels => labels.Format(Model.ValueLabelFormat))
    )
    .ValueAxis(axis => axis
        .Numeric()
            .Labels(labels => labels.Format(Model.LabelFormat))

            // Move the label-axis all the way down the value axis
            .AxisCrossingValue(0, int.MinValue)
    )
    .HtmlAttributes(new { style = "width: 100%;" })
    .Tooltip(tooltip => tooltip
        .Visible(true)
        .Format(Model.TooltipFormat)
        //.Template("#= series.name #: #= value #")
    ).RenderAs(RenderingMode.SVG)
) 
</div>