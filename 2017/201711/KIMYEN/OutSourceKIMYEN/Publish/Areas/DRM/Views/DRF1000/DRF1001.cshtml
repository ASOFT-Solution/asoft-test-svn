@*
//####################################################################
//# Copyright (C) 2010-2011, ASoft JSC.  All Rights Reserved. 
//#
//# History:
//#     Date Time       Updater         Comment
//#     25/08/2014      Đức Quý         Tạo mới
//####################################################################
*@
@using ASOFT.ERP.ViewModel.DRM
@using System.Web.Script.Serialization;
@model DRF1001ViewModel
@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
    ViewBag.Title = Html.ASOFTPageTitle(m => m.DRF1001Title, "DRF1001").ToHtmlString();
    ViewBag.Width = 1024;

    // Form Status
    bool isInsert = Model.FormStatus.Equals(ASOFTFormActionType.AddNew);
    //var initData = new JavaScriptSerializer().Serialize(Model);
}

@Html.ASOFTHidden("UrlAvatar", Url.Action("Avatar", "DRF1000", null, HttpContext.Current.Request.Url.Scheme))
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "DRF1001"}))
{
@(Html.ASOFTTab()
      .Name("DRF1001Tab")
      .Items(tabstrip =>
      {
          tabstrip.Add().Text(Html.ASOFTRaw(model => model.DRF1001Tab01Title))
              .Selected(true)
              .HtmlAttributes(new { @id = "TabMaster01" })
              .ContentHtmlAttributes(new { @class = "asf-tab-content" })
              .Content(Tab01().ToHtmlString());

          tabstrip.Add().Text(Html.ASOFTRaw(model => model.DRF1001Tab02Title))
              .HtmlAttributes(new { @id = "TabMaster02" })
              .ContentHtmlAttributes(new { @class = "asf-tab-content" })
              .Content(Tab02().ToHtmlString());

      })
      )

<div class="asf-form-button">
    <table class="asf-table-view">
        <tr>
            <td align="right">
                <div class="asf-popup-button-container">
                    <div>
                        @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnClose"))
                              .Name("BtnClose")
                              .Events(e => e.Click("DRF1001.btnClose_Click")))
                    </div>
                    <div >
                        @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveCopy"))
                                .Name("BtnSaveCopy")
                                .Events(e => e.Click("DRF1001.btnSaveCopy_Click"))
                                .HideIf(!isInsert))
                    </div>
                    <div>
                        @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveNew"))
                                .Name("btnSaveDRF1001")
                                .Events(e => e.Click("DRF1001.btnSaveNext_Click"))
                                .HideIf(!isInsert))
                    </div>
                    <div>
                        @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSave"))
                                .Name("BtnSaveClose")
                                .Events(e => e.Click("DRF1001.btnSave_Click"))
                                .Enable(false)
                                .HideIf(isInsert))
                    </div>                     
                </div>
            </td>
        </tr>
    </table>
</div>
}

@helper Tab01()
{
    <div class="asf-form-container">
        <div class="form-content">
            <div class="form-content-left">
                <table class="asf-table-view">
                    <tr>
                        <td style="vertical-align:top">@Html.ASOFTLabel(model => model.EmployeeImage)</td>
                        <td>
                            @Html.ASOFTLogo("DRF1000", "Avatar", new { Area = "DRM" }, width:140, height:160)
                        </td>
                        <td colspan="2" style="vertical-align:top">
                           @(Html.Kendo().Upload()
                                  .Name("upload")
                                  .Messages(m => m.Select(ASOFTLanguage.FindWordA00("A00.btnUpload")))
                                  .Multiple(false)
                                  .ShowFileList(true)
                                  .Async(a => a.Save("Save", "DRF1000").AutoUpload(true)
                                ).Events(e => e.Success("DRF1001.onSuccess")
                                                .Upload("DRF1001.onUpload"))
                            )
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.EmployeeID)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTTextBox(model => model.EmployeeID, htmlAttribute: new { initValue = Model.EmployeeID }, checkRegularExp: true)
                                    .ReadOnlyIf(Model.FormStatus != ASOFTFormActionType.AddNew))
                            @Html.ASOFTHidden("LastModifyDate", Model.LastModifyDate != null ? Model.LastModifyDate.Value.ToString("dd/MM/yyyy HH:mm:ss.fff") : "")
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.EmployeeName)</td>
                        <td class="asf-td-field" colspan="2">@Html.ASOFTTextBox(model => model.EmployeeName)</td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.EmployeeGroupID)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTBussinessComboBox()
                                .ASOFTDRMDepartmentID(model => model.EmployeeGroupID)
                                .Events(e=>e.Change("DRF1001.combo_Changed")))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.BranchID)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTBussinessComboBox()
                                .ASOFTDRMBranchID(model => model.BranchID, option: new ComboOption() { EventRequestEnd = "DRF1001.comboBox_RequestEnd" })
                                .Events(e=>e.Change("DRF1001.branchID_Changed").DataBound("DRF1001.branchID_DataBound")))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.TeamID)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTBussinessComboBox().ASOFTDRMTeamID(model => model.TeamID,
                                        option: new ComboOption() { 
                                        EventPostData = "DRF1001.teamID_Data",
                                        EventRequestEnd = "DRF1001.comboBox_RequestEnd" 
                                    })
                                    .Events(e=>e.Change("DRF1001.combo_Changed")))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.DutyID)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTBussinessComboBox()
                                .ASOFTDRMDutyID(model => model.DutyID)
                                .Events(e=>e.Change("DRF1001.combo_Changed")))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.StartDate)</td>
                        <td class="asf-td-field" colspan="2">@Html.ASOFTDateEdit(model => model.StartDate)</td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption"></td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTCheckbox(model=>model.Disabled)
                                .HideIf(Model.FormStatus == ASOFTFormActionType.AddNew))
                        </td>
                    </tr>
                </table>
            </div>
            <div class="form-content-right">
                 <table class="asf-table-view">
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.StopProbationaryDate)</td>
                        <td class="asf-td-field" colspan="2">@Html.ASOFTDateEdit(model => model.StopProbationaryDate)</td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.Birthday)</td>
                        <td class="asf-td-field" colspan="2">@Html.ASOFTDateEdit(model => model.Birthday)</td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.StatusID)</td>
                        <td class="asf-td-field" colspan="2">
                             @(Html.ASOFTBussinessComboBox()
                                    .ASOFTDRMCodeMaster(model => model.StatusID, "EmployeeStatus",
                                        option: new ComboOption() { EventRequestEnd = "DRF1001.comboBox_RequestEnd" })
                                    .Events(e=>e.Change("DRF1001.combo_Changed")))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.IdentifyCardNo)</td>
                        <td class="asf-td-field" colspan="2">@Html.ASOFTTextBox(model => model.IdentifyCardNo)</td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.IdentifyDate)</td>
                        <td class="asf-td-field" colspan="2">@(Html.ASOFTDateEdit(model => model.IdentifyDate))</td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.IndentifyPlace)</td>
                        <td class="asf-td-field" colspan="2">@(Html.ASOFTTextBox(model => model.IndentifyPlace))</td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.Level)</td>
                        <td class="asf-td-field" colspan="2">@Html.ASOFTTextBox(model => model.Level)</td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.Email)</td>
                        <td class="asf-td-field" colspan="2">@Html.ASOFTTextBox(model => model.Email)</td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.Phone)</td>
                        <td class="asf-td-field" colspan="2">@Html.ASOFTTextBox(model => model.Phone)</td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.Note)</td>
                        <td class="asf-td-field" colspan="2">@Html.ASOFTTextArea(model => model.Note)</td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption"></td>
                        <td class="asf-td-field" colspan="2">@Html.ASOFTCheckbox(model=>model.IsUser)</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
}


@helper Tab02()
{
    <div class="asf-form-container">
        <div class="form-content">
            <div class="form-content-left">
                <table class="asf-table-view">
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.BaseSalary)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTSpinEdit(model => model.BaseSalary))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.InsuranceSalary)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTSpinEdit(model => model.InsuranceSalary))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.TradeUnion)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTSpinEdit(model => model.TradeUnion))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.RiceAllowance)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTSpinEdit(model => model.RiceAllowance))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.GasAllowance)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTSpinEdit(model => model.GasAllowance))
                        </td>
                    </tr>
                </table>
            </div>
            <div class="form-content-right">
                 <table class="asf-table-view">
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.PhoneAllowance)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTSpinEdit(model => model.PhoneAllowance))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.OnsiteFee)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTSpinEdit(model => model.OnsiteFee))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.Remuneration)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTSpinEdit(model => model.Remuneration))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.Other)</td>
                        <td class="asf-td-field" colspan="2">
                            @(Html.ASOFTSpinEdit(model => model.Other))
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
}


    
@section styleFeature{
    <link href="@Url.Content("~/Areas/DRM/Content/Common.css")" rel="stylesheet" type="text/css" />
}

@section jsFeature {
    <script src="@Url.Content("~/Areas/DRM/Scripts/DRF1000/DRF1001.js?v=" + ASOFTEnvironment.Version)"></script>
    @*<script src="@Url.Content("~/Areas/DRM/Scripts/DRF1000/DRF1000.js")"></script>*@
   @* @Html.RenderScripts(files: new[] { "CRMF2061" })*@
}
