@*
//####################################################################
//# Copyright (C) 2010-2011, ASoft JSC.  All Rights Reserved. 
//#
//# History:
//#     Date Time       Updater         Comment
//#     05/05/2014      Chánh Thi       Tạo mới
//#     03/05/2014      Minh Lâm        Cập nhật - Phân quyền nút
//####################################################################
*@

@model ASOFT.ERP.ViewModel.POS.POSF0022ViewModel

@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
    bool isAddNew = (Model.FormStatus == ASOFTFormActionType.AddNew);
    ViewBag.Title = isAddNew ? @Html.ASOFTPageTitle(@Html.PopupADDTitle(m => m.Title), "POSF0022").ToHtmlString() : @Html.ASOFTPageTitle(@Html.PopupEditTitle(m => m.Title), "POSF0022").ToHtmlString();
    ViewBag.Width = 900;

    bool isUpdate =  isAddNew ? Model.AllowAdd() : Model.AllowUpdate();
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "POSF0022" }))
{
        
    @Html.ASOFTHidden(model => model.APK)
    @Html.ASOFTHidden(model => model.LastModifyDateValue)
    @Html.ASOFTHidden(model => model.ShopID)
    @Html.ASOFTHidden(model => model.InventoryQuantity)
    @Html.ASOFTHidden(model => model.RecepientShopName)
    <div class="asf-form-container container_12 pagging_bottom ">
        <div class="grid_6 alpha float_left">
            <table class="asf-table-view">
                <tr>
                    <td class="container_label">@Html.ASOFTLabel(model => model.VoucherNo)</td>
                    <td class="container_control">
                        @Html.ASOFTTextBox(model => model.VoucherNo,
                        htmlStyle: new { width = Unit.Percentage(100) })
                    </td>
                </tr>
                <tr>
                    <td>@Html.ASOFTLabel(model => model.VoucherDate)
                    </td>
                    <td>
                        @(Html.ASOFTDateEdit(model => model.VoucherDate,
                             htmlAttributes: new Dictionary<string, object> {
                                                    {"data-bind","value:VoucherDate"}}
                                                )
                                  //.Value(ASOFTEnvironment.WorkingDate)
                            )
                    </td>
                </tr>
                <tr>
                    <td>@Html.ASOFTLabel(model => model.EmployeeID)</td>
                    <td>
                        @(Html.ASOFTBussinessComboBox()
                              .ASOFTEmployeeID(model =>
                                  model.EmployeeID,
                              htmlAttributes: new Dictionary<string, object> {
                                                    {"data-bind","value:EmployeeID"}},
                              htmlStyle: new
                              {
                                  width = Unit.Percentage(100)
                              },
                              option: new ComboOption()
                              {
                                  SelectedFirst = false
                              })
                              .Events(e => e.Cascade("cboEmployeeID_Cascade"))
                              .DataTextField(ComboboxItemModel.COL_ID).Enable(false)
                        )

                    </td>
                </tr>
                 <tr>
                    <td class="container_label">@Html.ASOFTLabel(model => model.EmployeeName)</td>
                    <td class="container_control">
                        @Html.ASOFTTextBox(model => model.EmployeeName,
                        htmlAttribute: new Dictionary<string, object> {
                                                    },
                        htmlStyle: new { width = Unit.Percentage(100) }).ReadOnlyIf(true)
                    </td>
                </tr>
            </table>
        </div>
        <div class="grid_0"></div>
        <div class="grid_6 omega float_right line_left_with_grid">
            <table class="asf-table-view">
                <tr>
                    <td>@Html.ASOFTLabel(model => model.Description)

                    </td>
                    <td>
                        @Html.ASOFTTextBox(model => model.Description,
                         htmlAttribute: new Dictionary<string, object> {
                                                    {"data-bind","value:Description"}},
                        htmlStyle: new { width = Unit.Percentage(100) })
                    </td>
                </tr>
                <tr>
                     <td>@Html.ASOFTRadioButton(model => model.IsRefund, 1, htmlAttributes: new { id = "rdbIsDate0" }) @Html.ASOFTLabel(model => model.IsExportCompany)</td>
                </tr>
                <tr></tr>
                <tr>
                    <td>@Html.ASOFTRadioButton(model => model.IsRefund, 0, htmlAttributes: new { id = "rdbIsDate0" }) @Html.ASOFTLabel(model => model.IsExportShop)</td>
                    <td>
                         @Html.ASOFTBussinessComboBox().ASOFTShopIDExport(model => model.RecepientShopID).SelectedIndex(0)
                    </td>
                </tr>
               @* <tr>
                    <td></td>
                    <td class="asf-li-container">
                        <ul class="float_right">
                            <li>
                                @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnInherit"))
                                      .Name("btnInherit")
                                      .Events(e => e.Click("inherit_Click")))
                            </li>
                        </ul>
                    </td>
                </tr>*@
            </table>
        </div>
    </div>
    <div class="asf-form-container container_12">
        @Html.Partial("GridVoucherDetail")
    </div>
    <div class="container_12 asf-form-button">
        <ul class="empty">
            @if (Model.FormStatus == ASOFTFormActionType.AddNew)
            {
                <li>
                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveNew"))
                         .Name("btnSaveNew")
                         .Enable(Model.AllowAdd())
                         .Events(e => e.Click("btnSaveNew_Click")))
                </li>
                <li>
                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveCopy"))
                         .Name("btnSaveCopy")
                         .Enable(Model.AllowAdd())
                         .Events(e => e.Click("btnSaveCopy_Click")))
                </li>
            }
            else if (Model.FormStatus == ASOFTFormActionType.Edit)
            {
                <li>
                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSave"))
                      .Name("btnSaveNew")
                      .Enable(Model.AllowUpdate())
                      .Events(e => e.Click("btnUpdate_Click")))
                </li>
            }
            <li>
                @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnClose"))
                      .Name("btnClose")
                      .Events(e => e.Click(isUpdate ? "btnClose_Click" : "ASOFT.asoftPopup.closeOnly")))
            </li>

        </ul>
    </div>
}

@section jsFeature {
    <script src="@Url.Content("~/Areas/POS/Scripts/POSF0022.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Areas/POS/Scripts/POSF00151Autocomplete.js")" type="text/javascript"></script>
}

@section styleFeature{
    <link href="@Url.Content("~/Areas/POS/Content/POSF0022.css")" rel="stylesheet" type="text/css" />
}