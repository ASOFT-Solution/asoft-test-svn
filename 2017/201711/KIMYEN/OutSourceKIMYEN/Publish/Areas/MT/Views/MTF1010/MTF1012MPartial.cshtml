@model ASOFT.ERP.ViewModel.MT.MTF1010ViewModel

@helper LevelInfo()
{
<div id="viewPartial">
<div class="asf-master-content">
    <div class="asf-content-block first">
       <table class="asf-table-view">
            <tr >
                <td class="content-label">@Html.DisplayNameFor(model => model.LevelID)</td>
                <td class="dot"></td>
                <td class="content-text">@Html.DisplayFor(model=>model.LevelID)</td>
            </tr>
           <tr >
               <td class="content-label">@Html.DisplayNameFor(model => model.LevelName)</td>
                <td class="dot"></td>
               <td class="content-text" title="@Model.LevelName">@Html.DisplayFor(model=>model.LevelName)</td>
           </tr>
        </table>
      </div>
    <div class="asf-content-block middle">
        <table class="asf-table-view">
            <tr >
                <td class="content-label">@Html.DisplayNameFor(model => model.DivisionID)</td>
                <td class="dot"></td>
                <td class="content-text">@Html.DisplayFor(model=>model.DivisionID)</td>
            </tr>
            <tr >
                <td class="content-label">@Html.DisplayNameFor(model => model.IsCommon)</td>
                <td class="dot"></td>
                <td class="content-text">
                    @{ string common = Model.IsCommon ? ASOFTLanguage.FindWordA00("A00.Yes") : ASOFTLanguage.FindWordA00("A00.No"); }
                    @common
                </td>
            </tr>
        </table>
    </div>
    <div class="asf-content-block last">
        <table class="asf-table-view">
            <tr >
                <td class="content-label">@Html.DisplayNameFor(model => model.Disabled)</td>
                <td class="dot"></td>
                <td class="content-text">@Html.DisplayName(Model.Disabled ? ASOFTLanguage.FindWordA00("A00.Yes") : ASOFTLanguage.FindWordA00("A00.No"))</td>
            </tr>
            <tr >
                <td class="content-label">@Html.DisplayNameFor(model => model.Notes)</td>
                <td class="dot"></td>
                <td class="content-text" title="@Model.Notes">
                    <div class='content-ellipsis'>@Html.DisplayFor(model=>model.Notes)</div>
                </td>
            </tr>
        </table>
    </div>
</div>    
</div>
}

@(Html.ASOFTPanel()
.Name("panelbar")
.HtmlAttributes(new { @class = "block-panel-master" })
.Animation(animation => animation.Enable(true))
.Events(m => m.Activate("ASOFT.panelFormat.fitColumnHeight"))
.Items(panelbar =>
{
    panelbar.Add().Text(Html.ASOFTRaw(m => m.MTF1012PanelFirstTitle))
        .HtmlAttributes(new {@class = "block-panel-master-header"})
        .Expanded(true).Content(this.LevelInfo().ToHtmlString());

    panelbar.Add().Text(ASOFTLanguage.FindWordA00("A00.SystemInfo")).HtmlAttributes(new { @class = "block-panel-master-header" })
           .Content(Html.Partial("~/Views/Shared/EditorTemplates/SystemInfo.cshtml", Model.SystemInfo).ToHtmlString());
    
    panelbar.Add().Text(ASOFTLanguage.FindWordA00("A00.History"))
        .HtmlAttributes(new { @class = "block-panel-master-header" }).Content("<div>&nbsp;</div>");

    panelbar.Add().Text(ASOFTLanguage.FindWordA00("A00.Attach"))
        .HtmlAttributes(new { @class = "block-panel-master-header" }).Content("<div>&nbsp;</div>");

}))