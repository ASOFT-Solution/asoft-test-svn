
@model ASOFT.ERP.ViewModel.MT.MTF2010ViewModel
@helper GenneralPanel()
{
    <div class="full-fieldset">
        <fieldset>
            <legend><b>@Html.ASOFTRaw(model => model.Tab01Fieldset01Title)</b></legend>
            <div class="left-fieldset">
                <table class="asf-table-view">
                     <tr>
                        <td>@Html.ASOFTLabel(model => model.EduVoucherNo)</td>
                        <td class="asf-td-field">@Html.ASOFTTextBox(model => model.EduVoucherNo).ReadOnlyIf(true)</td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.StudentID)</td>
                        <td class="asf-td-field">
                            <div class="asf-common-search popup-input-text">
                                <span class="k-textbox k-space-right">
                                    @Html.ASOFTTextBox(model => model.StudentID, htmlStyle: new {width = Unit.Percentage(100)}).ReadOnlyIf(true /*alway*/)

                                    @(Html.ASOFTButton(string.Empty, htmlStyle: new {width = "24px", height = "24px"})
                                          .Name("btnChoose").HtmlAttributes(new {Class = "k-icon asf-i-pdf-24", Title = ASOFTLanguage.FindWordA00("A00.btnChoose")})
                                          .Events(e => e.Click("MTF2010Param.btnChoose_Click"))
                                          .Enable(Model.FormStatus == ASOFTFormActionType.AddNew && ASOFTEnvironment.IsStudyInfo))
                                </span>
                            </div>

                            @Html.ASOFTHidden("LastModifyDate", Model.LastModifyDate.HasValue ? Model.LastModifyDate.Value.ToString("dd/MM/yyyy HH:mm:ss.fff") : "")   
                            @Html.ASOFTHidden("MTF2011StudentID", Model.StudentID)
                            @Html.ASOFTHidden(model=>model.CurrentClassID)
                            @Html.ASOFTHidden(model=>model.DetailAPK)
                            @Html.ASOFTHidden(model=>model.APK)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.ASOFTLabel(model => model.StudentName)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTTextBox(model => model.StudentName)
                                .ReadOnlyIf(!ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.CourseID)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCourseID(model => model.CourseID, htmlStyle: new {width = Unit.Percentage(100)})
                                  .Events(m => m.Change("MTF2010Param.course_Changed"))
                                  .Enable(Model.FormStatus == ASOFTFormActionType.AddNew && ASOFTEnvironment.IsStudyInfo)
                             )
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.ClassID)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTClassID(model => model.ClassID, 
                                                                            option: new ComboOption {EventPostData = "MTF2010Param.classSendData"}, 
                                                                            htmlAttributes: new { listWidth = 400},
                                                                            htmlStyle: new {width = Unit.Percentage(100)})
                                  .Events(m => 
                                       m.Change("MTF2010Param.class_Changed"))
                                        //.DataBound("MTF2010Param.class_Bound"))
                                  .Enable(ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>    
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.ClassDate)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTDateEdit(model => model.ClassDate, null, htmlStyle: new {width = Unit.Percentage(100)})
                                   .Enable(ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption radio-checkbox"></td>
                        <td class="asf-td-field radio-checkbox">
                            @Html.ASOFTCheckbox(model => model.IsChangeClass).CheckBoxReadOnly(!ASOFTEnvironment.IsStudyInfo)
                        </td>
                    </tr>
                </table>
            </div>
            <div class="right-fieldset">
                <table class="asf-table-view">
                    <tr>
                        <td class="asf-td-caption radio-checkbox">@Html.ASOFTLabel(model => model.GroupFee)</td>
                        <td class="asf-td-field radio-checkbox">
                            <div class="block-left">
                                <span>
                                    @(Html.ASOFTRadioButton(model => model.IsFree, true, new {id = "rdoFree"})
                                        .CheckedIf(Model.IsFree).CheckBoxReadOnly(!ASOFTEnvironment.IsStudyInfo))
                                </span>
                                @Html.ASOFTLabel(model => model.IsFree)
                            </div>
                            <div class="block-right">
                                <span>
                                    @(Html.ASOFTRadioButton(model => model.IsFree, false, new {id = "rdoNotFree"})
                                        .CheckedIf(!Model.IsFree).CheckBoxReadOnly(!ASOFTEnvironment.IsStudyInfo))
                                </span>
                                @Html.ASOFTLabel(model => model.IsNotFree)
                            </div>
                        </td>
                    </tr>
                     <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.StatusID)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.StatusID, "StatusID", null,
                                                                           htmlStyle: new {width = Unit.Percentage(100)})
                                                            .Events(m => m.Change("MTF2010Param.checkInList")))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.BeginDate)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTDateEdit(model => model.BeginDate)
                                .Enable(ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.EndDate)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTDateEdit(model => model.EndDate)
                                .Enable(ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-40">@Html.ASOFTLabel(model => model.WeekQuantity)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTSpinEdit(model => model.WeekQuantity)
                                .Format(ASOFTUtilities.FormatNumberDecimalDisplay(0))
                                .Decimals(0)
                                .Enable(ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-40">@Html.ASOFTLabel(model => model.NextCourseID)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCourseID(model => model.NextCourseID, htmlStyle: new {width = Unit.Percentage(100)})
                                  .Events(m => m.Change("MTF2010Param.nextCourse_Changed"))
                                  .Enable(ASOFTEnvironment.IsStudyInfo)
                                  )
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.NextClassID)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTClassID(model => model.NextClassID, 
                                                                        option: new ComboOption {
                                                                            SelectedFirst = false, 
                                                                            EventPostData = "MTF2010Param.nextClassSendData"
                                                                        },
                                                                        htmlStyle: new {width = Unit.Percentage(100)})
                                                                        .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                        .Enable(ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                       
                </table>
            </div>
            <div class="full-fieldset">
                <div class="full">
                    <table class="full">
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.Notes)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTTextArea(model => model.Notes, null, htmlStyle: new {width = Unit.Percentage(99)})
                                    .ReadOnlyIf(!ASOFTEnvironment.IsStudyInfo))
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </fieldset>
    </div>
    <div class="full-fieldset format">
        <div class="left-fieldset">
            <fieldset>
                <legend><b>@Html.ASOFTRaw(model => model.Tab01Fieldset02Title)</b></legend>
                <table class="asf-table-view">
                    <tr>
                        <td class="asf-td-caption-40">@Html.ASOFTLabel(model => model.ReduceAmount)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTSpinEdit(model => model.ReduceAmount, htmlStyle: new {width = Unit.Percentage(100)})
                                .Enable(ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-40">@Html.ASOFTLabel(model => model.ReduceTime)</td>
                        <td class="asf-td-field">@(Html.ASOFTSpinEdit(model => model.ReduceTime,
                                                                    htmlStyle: new {width = Unit.Percentage(100)})
                                                                    .Format(ASOFTUtilities.FormatNumberDisplay(0))
                                                                    .Decimals(0)
                                                                    .Enable(ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.ReduceReasonID)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTReduceReasonID(model => model.ReduceReasonID, null,
                                                                               htmlStyle: new {width = Unit.Percentage(100)})
                                                            .Events(m => m.Change("MTF2010Param.checkInList"))
                                                            .Enable(ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.ReduceNotes)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTTextBox(model => model.ReduceNotes, htmlStyle: new {width = Unit.Percentage(100)})
                                .ReadOnlyIf(!ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <div class="right-fieldset">
            <fieldset>
                <legend><b>@Html.ASOFTRaw(model => model.Tab01Fieldset03Title)</b></legend>
                <table class="asf-table-view">
                    <tr>
                        <td class="asf-td-caption-40">@Html.ASOFTLabel(model => model.ReturnMoney)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTSpinEdit(model => model.ReturnMoney,
                                                htmlStyle: new {width = Unit.Percentage(100)}).Enable(ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.ReturnDate)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTDateEdit(model => model.ReturnDate, null, htmlStyle: new {width = Unit.Percentage(100)})
                                .Enable(ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.ReturnReason)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.ReturnReason, "ReturnReason", null,
                                                                           htmlStyle: new {width = Unit.Percentage(100)})
                                                                           .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                           .Enable(ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.ReturnPersonID)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTTextBox(model => model.ReturnPersonID)
                                .ReadOnlyIf(!ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        
    </div>
    
    <div class="full-fieldset format">
        <fieldset>
         <legend><b>@Html.ASOFTRaw(model => model.Tab01Fieldset04Title)</b></legend>
            <div class="left-fieldset">
                 <table class="asf-table-view">
                    <tr>
                        <td class="asf-td-caption-40">@Html.ASOFTLabel(model => model.SendMoney)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTSpinEdit(model => model.SendMoney, htmlStyle: new { width = Unit.Percentage(100) })
                                .Enable(ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                 </table>
            </div>
            <div class="right-fieldset">
                 <table class="asf-table-view">
                    <tr>
                        <td class="asf-td-caption-40">@Html.ASOFTLabel(model => model.SendNotes)</td>
                        <td class="asf-td-field">
                             @(Html.ASOFTTextBox(model => model.SendNotes, htmlStyle: new { width = Unit.Percentage(100) })
                                .ReadOnlyIf(!ASOFTEnvironment.IsStudyInfo))
                        </td>
                    </tr>
                 </table>
            </div>
         </fieldset>
    </div>
}

@helper MiddleTermPanel()
{
    <div class="@string.Format("{0}", ASOFTEnvironment.IsAdmin ? "full-fieldset" : Model.IsEditMidCourse ? "full-fieldset" : "full-fieldset full-fieldset-readonly")">
        <div class="left-fieldset">
            <div class="full">
                <fieldset>
                    <legend><b>@Html.ASOFTRaw(model => model.Tab02Fieldset01Title)</b></legend>
                    <table class="asf-table-view">
                        <tr>
                            <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Performance01)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Performance01, "ResultID", null,
                                                                                htmlStyle: new {width = Unit.Percentage(100)})
                                                                                .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                                .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Performance02)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Performance02, "ResultID", null,
                                                                                htmlStyle: new {width = Unit.Percentage(100)})
                                                                            .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                            .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Performance03)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Performance03, "ResultID", null,
                                                                                htmlStyle: new {width = Unit.Percentage(100)})
                                                                                .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                                .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Performance04)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Performance04, "ResultID", null,
                                                                                htmlStyle: new {width = Unit.Percentage(100)})
                                                                                .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                                .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Performance05)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Performance05, "ResultID", null,
                                                                                htmlStyle: new {width = Unit.Percentage(100)})
                                                                                .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                                .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Performance06)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Performance06, "ResultID", null,
                                                                                htmlStyle: new {width = Unit.Percentage(100)})
                                                                                .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                                .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
            <div class="full drop-fieldset">
                <fieldset>
                    <legend><b>@Html.ASOFTRaw(model => model.Tab02Fieldset02Title)</b></legend>
                    <table class="asf-table-view">
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.Listening)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTSpinEdit(model => model.Listening,
                                                    htmlStyle: new {width = Unit.Percentage(100)})
                                                    .Events(e => e.Change("MTF2010Param.countMiddleTotal"))
                                                    .Format(ASOFTUtilities.FormatNumberDecimalDisplay(2))
                                                    .Decimals(2)
                                                    .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.Speaking)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTSpinEdit(model => model.Speaking,
                                                    htmlStyle: new {width = Unit.Percentage(100)})
                                                    .Events(e => e.Change("MTF2010Param.countMiddleTotal"))
                                                    .Format(ASOFTUtilities.FormatNumberDecimalDisplay(2))
                                                    .Decimals(2)
                                                    .Enable(ASOFTEnvironment.IsExamResult))

                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.Reading)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTSpinEdit(model => model.Reading,
                                                    htmlStyle: new {width = Unit.Percentage(100)})
                                                    .Events(e => e.Change("MTF2010Param.countMiddleTotal"))
                                                    .Format(ASOFTUtilities.FormatNumberDecimalDisplay(2))
                                                    .Decimals(2)
                                                    .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.Writing)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTSpinEdit(model => model.Writing,
                                                    htmlStyle: new {width = Unit.Percentage(100)})
                                                    .Events(e => e.Change("MTF2010Param.countMiddleTotal"))
                                                    .Format(ASOFTUtilities.FormatNumberDecimalDisplay(2))
                                                    .Decimals(2)
                                                    .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.MiddleTotal)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTSpinEdit(model => model.MiddleTotal,
                                                    htmlStyle: new {width = Unit.Percentage(100)})
                                                    .Format(ASOFTUtilities.FormatNumberDecimalDisplay(2))
                                                    .Decimals(2)
                                                    .Enable(false))
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
        <div class="right-fieldset format">
            <fieldset>
                <legend><b>@Html.ASOFTRaw(model => model.Tab02Fieldset03Title)</b></legend>
                <table class="asf-table-view">
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Result01)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Result01, "ResultID", null,
                                                                            htmlStyle: new {width = Unit.Percentage(100)})
                                                                            .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                            .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Result02)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Result02, "ResultID", null,
                                                                            htmlStyle: new {width = Unit.Percentage(100)})
                                                                            .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                            .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Result03)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Result03, "ResultID", null,
                                                                            htmlStyle: new {width = Unit.Percentage(100)})
                                                                            .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                            .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Result04)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Result04, "ResultID", null,
                                                                            htmlStyle: new {width = Unit.Percentage(100)})
                                                                            .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                            .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Result05)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Result05, "ResultID", null,
                                                                            htmlStyle: new {width = Unit.Percentage(100)})
                                                                            .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                            .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Result06)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Result06, "ResultID", null,
                                                                            htmlStyle: new {width = Unit.Percentage(100)})
                                                                            .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                            .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Result07)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Result07, "ResultID", null,
                                                                            htmlStyle: new {width = Unit.Percentage(100)})
                                                                            .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                            .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Result08)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Result08, "ResultID", null,
                                                                            htmlStyle: new {width = Unit.Percentage(100)})
                                                                            .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                            .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Result09)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Result09, "ResultID", null,
                                                                            htmlStyle: new {width = Unit.Percentage(100)})
                                                                            .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                            .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Result10)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Result10, "ResultID", null,
                                                                            htmlStyle: new {width = Unit.Percentage(100)})
                                                                            .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                            .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.Result11)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.Result11, "ResultID", null,
                                                                            htmlStyle: new {width = Unit.Percentage(100)})
                                                                            .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                            .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <div class="full-fieldset">
            <table class="asf-table-view">
                <tr>
                    <td class="OverallAssess">@Html.ASOFTLabel(model => model.OverallAssess)</td>
                    <td class="asf-td-field">
                        @(Html.ASOFTTextArea(model => model.OverallAssess, htmlStyle: new { width =  Unit.Percentage(99)})
                            .ReadOnlyIf(!ASOFTEnvironment.IsExamResult))
                    </td>
                </tr>
            </table>
        </div>
    </div>
}
@helper EndTermPanel()
{
    <div class=" @string.Format("{0}", ASOFTEnvironment.IsAdmin ? "full-fieldset" : Model.IsEditEndCourse ? "full-fieldset" : "full-fieldset full-fieldset-readonly")">
        <div class="left-fieldset">
            <div class="full">
                <fieldset>
                    <legend><b>@Html.ASOFTRaw(model => model.Tab03Fieldset01Title)</b></legend>
                    <table class="asf-table-view">
                        <tr>
                            <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndPerformance01)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndPerformance01, "ResultID", null,
                                                                               htmlStyle: new {width = Unit.Percentage(100)})
                                                                               .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                               .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndPerformance02)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndPerformance02, "ResultID", null,
                                                                               htmlStyle: new {width = Unit.Percentage(100)})
                                                                               .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                               .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndPerformance03)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndPerformance03, "ResultID", null,
                                                                               htmlStyle: new {width = Unit.Percentage(100)})
                                                                               .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                               .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndPerformance04)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndPerformance04, "ResultID", null,
                                                                               htmlStyle: new {width = Unit.Percentage(100)}).Events(m => m.Change("MTF2010Param.checkInList"))
                                                                               .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndPerformance05)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndPerformance05, "ResultID", null,
                                                                               htmlStyle: new {width = Unit.Percentage(100)})
                                                                               .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                               .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndPerformance06)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndPerformance06, "ResultID", null,
                                                                               htmlStyle: new {width = Unit.Percentage(100)})
                                                                               .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                               .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
            <div class="full drop-fieldset">
                <fieldset>
                    <legend><b>@Html.ASOFTRaw(model => model.Tab03Fieldset02Title)</b></legend>
                    <table class="asf-table-view">
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.EndListening)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTSpinEdit(model => model.EndListening,
                                                    htmlStyle: new {width = Unit.Percentage(100)})
                                                    .Events(e => e.Change("MTF2010Param.countEndTotal"))
                                                    .Format(ASOFTUtilities.FormatNumberDecimalDisplay(2))
                                                    .Decimals(2)
                                                    .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.EndSpeaking)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTSpinEdit(model => model.EndSpeaking,
                                                    htmlStyle: new {width = Unit.Percentage(100)})
                                                    .Format(ASOFTUtilities.FormatNumberDecimalDisplay(2))
                                                    .Decimals(2)
                                                    .Events(e => e.Change("MTF2010Param.countEndTotal"))
                                                    .Enable(ASOFTEnvironment.IsExamResult))

                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.EndReading)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTSpinEdit(model => model.EndReading,
                                                    htmlStyle: new {width = Unit.Percentage(100)})
                                                    .Events(e => e.Change("MTF2010Param.countEndTotal"))
                                                    .Format(ASOFTUtilities.FormatNumberDecimalDisplay(2))
                                                    .Decimals(2)
                                                    .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.EndWriting)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTSpinEdit(model => model.EndWriting,
                                                    htmlStyle: new {width = Unit.Percentage(100)})
                                                    .Events(e => e.Change("MTF2010Param.countEndTotal"))
                                                    .Format(ASOFTUtilities.FormatNumberDecimalDisplay(2))
                                                    .Decimals(2)
                                                    .Enable(ASOFTEnvironment.IsExamResult))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.EndTotal)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTSpinEdit(model => model.EndTotal,
                                                    htmlStyle: new {width = Unit.Percentage(100)})
                                                    .Format(ASOFTUtilities.FormatNumberDecimalDisplay(2))
                                                    .Decimals(2)
                                                    .Enable(false))
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
        <div class="right-fieldset format">
            <fieldset>
                <legend><b>@Html.ASOFTRaw(model => model.Tab03Fieldset03Title)</b></legend>
                <table class="asf-table-view">
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndResult01)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndResult01, "ResultID", null,
                                                                           htmlStyle: new {width = Unit.Percentage(100)})
                                                                           .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                           .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndResult02)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndResult02, "ResultID", null,
                                                                           htmlStyle: new {width = Unit.Percentage(100)})
                                                            .Events(m => m.Change("MTF2010Param.checkInList"))
                                                            .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndResult03)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndResult03, "ResultID", null,
                                                                           htmlStyle: new {width = Unit.Percentage(100)})
                                                                           .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                           .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndResult04)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndResult04, "ResultID", null,
                                                                           htmlStyle: new {width = Unit.Percentage(100)})
                                                                           .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                           .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndResult05)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndResult05, "ResultID", null,
                                                                           htmlStyle: new {width = Unit.Percentage(100)})
                                                                           .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                           .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndResult06)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndResult06, "ResultID", null,
                                                                           htmlStyle: new {width = Unit.Percentage(100)})
                                                                           .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                           .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndResult07)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndResult07, "ResultID", null,
                                                                           htmlStyle: new {width = Unit.Percentage(100)})
                                                                           .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                           .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndResult08)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndResult08, "ResultID", null,
                                                                           htmlStyle: new {width = Unit.Percentage(100)})
                                                                           .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                           .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption">@Html.ASOFTLabel(model => model.EndResult09)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndResult09, "ResultID", null,
                                                                           htmlStyle: new {width = Unit.Percentage(100)})
                                                                           .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                           .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndResult10)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndResult10, "ResultID", null,
                                                                           htmlStyle: new {width = Unit.Percentage(100)})
                                                                           .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                           .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr>
                        <td class="asf-td-caption-50">@Html.ASOFTLabel(model => model.EndResult11)</td>
                        <td class="asf-td-field">
                            @(Html.ASOFTBussinessComboBox().ASOFTCodeMaster(model => model.EndResult11, "ResultID", null,
                                                                           htmlStyle: new {width = Unit.Percentage(100)})
                                                                           .Events(m => m.Change("MTF2010Param.checkInList"))
                                                                           .Enable(ASOFTEnvironment.IsExamResult))
                        </td>
                    </tr>
                    <tr><td colspan="2">&nbsp;</td></tr>
                </table>
            </fieldset>
        </div>
        <div class="full">
            <fieldset>
                <legend><b>@Html.ASOFTRaw(model => model.Tab03Fieldset04Title)</b></legend>
                <div class="full">
                    <table class="asf-table-view">
                        <tr>
                            <td>
                                <span>
                                    @(Html.ASOFTRadioButton(model => model.IsPass, true, new { id = "rdoPass" }).CheckedIf(Model.IsPass)
                                        .CheckBoxReadOnly(!ASOFTEnvironment.IsExamResult))
                                </span>
                                @Html.ASOFTLabel(model => model.IsPass)
                            </td>
                            <td>
                                <span>
                                    @(Html.ASOFTRadioButton(model => model.IsPass, false, new {id = "rdoInPass"}).CheckedIf(!Model.IsPass)
                                        .CheckBoxReadOnly(!ASOFTEnvironment.IsExamResult))
                                </span>
                                @Html.ASOFTLabel(model => model.IsInPass)
                            </td>
                        </tr>
                    </table>
                </div>
            </fieldset>
        </div>
        <div class="full">
            <table class="asf-table-view">
                <tr>
                    <td class="OverallAssess">@Html.ASOFTLabel(model => model.EndOverallAssess)</td>
                    <td class="asf-td-field">
                        @(Html.ASOFTTextArea(model => model.EndOverallAssess, htmlStyle: new { width = Unit.Percentage(99) })
                            .ReadOnlyIf(!ASOFTEnvironment.IsExamResult))
                    </td>
                </tr>
            </table>
        </div>
    </div>
}

@using (Html.BeginForm(null, null, FormMethod.Post, new {id = "MTF2011"}))
{
    @(Html.ASOFTTab()
          .Name("MTF2011Tab")
          .Items(tabstrip =>
                     {
                         tabstrip.Add().Text(Html.ASOFTRaw(model => model.MTF2011Tab01Title))
                             .Selected(true)
                             .HtmlAttributes(new {@id = "TabstripMaster-1"})
                             .ContentHtmlAttributes(new {@class = "asf-tab-content"})
                             .Content(GenneralPanel().ToHtmlString());

                         tabstrip.Add().Text(Html.ASOFTRaw(model => model.MTF2011Tab02Title))
                             .HtmlAttributes(new {@id = "TabstripMaster-3"})
                             .ContentHtmlAttributes(new {style = "height:792px;"})
                             .ContentHtmlAttributes(new {@class = "asf-tab-content"})
                             .Content(MiddleTermPanel().ToHtmlString());

                         tabstrip.Add().Text(Html.ASOFTRaw(model => model.MTF2011Tab03Title))
                             .HtmlAttributes(new {@id = "TabstripMaster-3"})
                             .ContentHtmlAttributes(new {style = "height:792px;"})
                             .ContentHtmlAttributes(new {@class = "asf-tab-content"})
                             .Content(EndTermPanel().ToHtmlString());
                     })
          )
    @*@Html.Partial(@"../Shared/CUButton",
        Model.CUButton)*@
    <div class="asf-form-button">
        <table class="asf-table-view">
            <tr>
                <td align="right">
                    <div class="asf-popup-button-container">
                        <div>
                            @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnClose"))
                                  .Name("BtnClose")
                                  .Events(e => e.Click("MTF2010Param.btnClose_Click")))
                        </div>
                        <div>
                            @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveCopy"))
                                  .Name("BtnSaveCopy")
                                  .Events(e => e.Click("MTF2010Param.btnSaveCopy_Click"))
                                  .HideIf(Model.FormStatus != ASOFTFormActionType.AddNew)
                                  .Enable(ASOFTEnvironment.IsStudyInfo))
                        </div>  
                        <div>
                            @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveNew"))
                                  .Name("BtnSaveNew")
                                  .Events(e => e.Click("MTF2010Param.btnSaveNew_Click"))
                                  .HideIf(Model.FormStatus != ASOFTFormActionType.AddNew)
                                  .Enable(ASOFTEnvironment.IsStudyInfo))                     
                        </div>
                        <div>
                            @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSave"))
                                  .Name("BtnSaveClose")
                                  .Events(e => e.Click("MTF2010Param.btnSaveClose_Click"))
                                  .HideIf(Model.FormStatus == ASOFTFormActionType.AddNew))
                        </div>
                    </div>
                </td>
            </tr>
        </table>
    </div>
}