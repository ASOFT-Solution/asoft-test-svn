
@model ASOFT.ERP.ViewModel.MT.MTF2020ViewModel

@{
    bool isInsert = ASOFTFormActionType.AddNew == Model.FormStatus;
}
@using (Html.BeginForm(null, null, FormMethod.Post, new {id = "MTF2021"}))
{
    <div class="asf-form-container">
        <div class="form-content">
            <div class="full-fieldset">
                <div class="left-fieldset">
                    <table class="asf-table-view" >
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.StopVoucherNo)</td>
                            <td class="asf-td-field">@Html.ASOFTTextBox(model => model.StopVoucherNo).ReadOnlyIf(true /*alway*/)</td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.StudentID)</td>
                            <td class="asf-td-field">
                                <div class="asf-common-search popup-input-text">
                                    <span class="k-textbox k-space-right">
                                        @Html.ASOFTTextBox(model => model.StudentID, htmlStyle: new {width = Unit.Percentage(100)}).ReadOnlyIf(true /*alway*/)

                                        @(Html.ASOFTButton("", htmlStyle: new {width = "24px", height = "24px"})
                                              .Name("btnChoose").HtmlAttributes(new {Class = "k-icon asf-i-pdf-24", Title = ASOFTLanguage.FindWordA00("A00.btnChoose")})
                                              .Events(e => e.Click("MTF2020Param.btnChoose_Click"))
                                              .Enable(Model.FormStatus == ASOFTFormActionType.AddNew))
                                    </span>
                                </div>
                                
                                @Html.ASOFTHidden("LastModifyDate", Model.LastModifyDate.HasValue ? Model.LastModifyDate.Value.ToString("dd/MM/yyyy HH:mm:ss.fff") : "")   
                                @Html.ASOFTHidden("MTF2021StudentID", Model.StudentID)
                                @Html.ASOFTHidden("MTF2021ClassID", Model.ClassID)
                                @Html.ASOFTHidden("MTF2021APK", Model.APK)
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.StudentName)</td>
                            <td class="asf-td-field">@Html.ASOFTTextBox(model => model.StudentName).ReadOnlyIf(true /*alway*/)</td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.ClassID)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTBussinessComboBox().ASOFTClassIDByStudent(model => model.ClassID, option: new ComboOption {SelectedFirst = true, EventPostData = "MTF2020Param.class_PostData"},
                                                                                      htmlStyle: new {width = Unit.Percentage(100)})
                                      .Events(m => m.Change("MTF2020Param.checkInList"))
                                      .Enable(Model.FormStatus == ASOFTFormActionType.AddNew))

                            </td>
                        </tr>
                    </table>
                </div> <!-- End left column-->
                <div class="right-fieldset">
                    <table class="asf-table-view" >
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.StopDate)</td>
                            <td class="asf-td-field">
                                @Html.ASOFTDateEdit(model => model.StopDate, htmlStyle: new {width = Unit.Percentage(100)})
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.StopReasonID)</td>
                            <td class="asf-td-field">
                                @(Html.ASOFTBussinessComboBox().ASOFTStopReasonID(model => model.StopReasonID, option: new ComboOption {SelectedFirst = false},
                                                                                  htmlStyle: new {width = Unit.Percentage(100)})
                                      .Events(m => m.Change("MTF2020Param.checkInList")))
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.StopPerson)</td>
                            <td class="asf-td-field">
                                @Html.ASOFTTextBox(model => model.StopPerson, null,
                                                   new {width = Unit.Percentage(100)})
                            </td>
                        </tr>
                        <tr>
                            <td class="asf-td-caption">@Html.ASOFTLabel(model => model.Notes)</td>
                            <td class="asf-td-field">
                                @Html.ASOFTTextArea(model => model.Notes, null,
                                                    new {width = Unit.Percentage(98)})
                            </td>
                        </tr>
                    </table>
                </div><!-- End right column -->

            </div><!-- End group -->
        </div>
       
        <div class="asf-form-button">
            <table class="asf-table-view">
                <tr>
                    <td align="right">
                        <div class="asf-popup-button-container">
                            <div>
                                @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnClose"))
                                      .Name("BtnClose")
                                      .Events(e => e.Click("MTF2020Param.btnClose_Click")))
                            </div>
                            @if (isInsert)
                            {
                                <div >
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveCopy"))
                                          .Name("BtnSaveCopy")
                                          .Events(e => e.Click("MTF2020Param.btnSaveCopy_Click")))
                                </div>
                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveNew"))
                                          .Name("btnSaveMTF1001")
                                          .Events(e => e.Click("MTF2020Param.btnSaveNext_Click")))
                                </div>
                            }
                            else
                            {
                                <div>
                                    @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSave"))
                                          .Name("BtnSaveClose")
                                          .Events(e => e.Click("MTF2020Param.btnSave_Click")))
                                </div>
                            }
                            
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
}