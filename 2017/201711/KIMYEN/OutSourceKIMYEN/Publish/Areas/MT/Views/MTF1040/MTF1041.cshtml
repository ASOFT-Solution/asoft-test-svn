
@model ASOFT.ERP.ViewModel.MT.MTF1040ViewModel
@{
    bool isInsert = ASOFTFormActionType.AddNew == Model.FormStatus;
}
@using (Html.BeginForm(null, null, FormMethod.Post, new {id = "MTF1041"}))
{
    <div class="asf-form-container">
        <div class="mtf1041-form-content">
            <table class="asf-table-view" >
                <tr>
                    <td class="asf-td-caption">@Html.ASOFTLabel(model => model.S)</td>
                    <td class="asf-td-field" colspan="2">
                        @(Html.ASOFTBussinessComboBox().ASOFTSClassify(
                              model => model.S,
                              new ComboOption {EventPostData = "MTF1040.s_PostData"},
                              new {width = Unit.Percentage(100)})
                              .Events(e => e.Change("MTF1040.s_Changed"))
                              .Enable(Model.FormStatus == ASOFTFormActionType.AddNew))
                    </td>
                </tr>
                <tr>
                    <td class="asf-td-caption">@Html.ASOFTLabel(model => model.ClassID)</td>
                    <td class="asf-td-field" colspan="2">
                        @(Html.ASOFTTextBox(model => model.ClassID, null, new {width = Unit.Percentage(100)})
                              .ReadOnlyIf(Model.FormStatus != ASOFTFormActionType.AddNew))
                        @Html.ASOFTHidden("LastModifyDate", Model.LastModifyDate.HasValue ? Model.LastModifyDate.Value.ToString("dd/MM/yyyy HH:mm:ss.fff") : "") 
                    </td>
                </tr>
                <tr>
                    <td class="asf-td-caption">@Html.ASOFTLabel(model => model.ClassName)</td>
                    <td class="asf-td-field" colspan="2">
                        @Html.ASOFTTextBox(model => model.ClassName, null, new {width = Unit.Percentage(100)})
                    </td>
                </tr>
                <tr>
                    <td class="asf-td-caption">@Html.ASOFTLabel(model => model.BranchID)</td>
                    <td class="asf-td-field" colspan="2">
                         @(Html.ASOFTBussinessComboBox().ASOFTBranchID(model => model.BranchID))
                    </td>
                </tr>
                <tr>
                    <td class="asf-td-caption">@Html.ASOFTLabel(model => model.LevelID)</td>
                    <td class="asf-td-field" colspan="2">
                        @(Html.ASOFTBussinessComboBox().ASOFTLevelID(model => model.LevelID, null,
                                                                     htmlStyle: new {width = Unit.Percentage(100)})
                              .Events(e => e.Change("MTF1040.checkDataCombobox")))
                    </td>
                </tr>
                <tr>
                    <td class="asf-td-caption">@Html.ASOFTLabel(model => model.CourseID)</td>
                    <td class="asf-td-field" colspan="2">
                        @(Html.ASOFTBussinessComboBox().ASOFTCourseID(model => model.CourseID, null,
                                                                      htmlStyle: new {width = Unit.Percentage(100)})
                              .Events(e => e.Change("MTF1040.checkDataCombobox")))
                    </td>
                </tr>
                <tr>
                    <td class="asf-td-caption">@Html.ASOFTLabel(model => model.SchoolTimeID)</td>
                    <td class="asf-td-field" colspan="2">
                        @(Html.ASOFTBussinessComboBox().ASOFTSchoolTimeID(model => model.SchoolTimeID, null,
                                                                          htmlStyle: new {width = Unit.Percentage(100)})
                              .Events(e => e.Change("MTF1040.checkDataCombobox")))
                    </td>
                </tr>
                <tr>
                    <td class="asf-td-caption">@Html.ASOFTLabel(model => model.Notes)</td>
                    <td class="asf-td-field" colspan="2">
                        @Html.ASOFTTextArea(model => model.Notes, null, new {width = Unit.Percentage(98)})
                    </td>
                </tr>
                <tr>
                    <td class="asf-td-caption"></td>
                    <td >
                        @Html.ASOFTCheckbox(model => model.Disabled).HideIf(Model.FormStatus == ASOFTFormActionType.AddNew)
                        @*@(Html.ASOFTHidden("LastModifyDate", 
                            Model.LastModifyDate.HasValue ? Model.LastModifyDate.Value.ToString("dd/MM/yyyy HH:mm:ss.fff") : ""))*@
                    </td>
                </tr>
            </table>
        </div>
        <div class="asf-form-button">
            <table class="asf-table-view">
                <tr>
                    <td align="right">
                        <div class="asf-popup-button-container">
                            <div>
                                @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnClose"))
                                      .Name("btnClose").Events(e => e.Click("MTF1040.btnCloseClick")))
                            </div>
                            <div>
                                @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSaveDetails"))
                                      .Name("btnSaveDetails").Events(e => e.Click("MTF1040.btnSaveDetails"))
                                      .HideIf(Model.FormStatus != ASOFTFormActionType.AddNew))
                            </div>
                            <div>
                                @(Html.ASOFTButton(ASOFTLanguage.FindWordA00("A00.btnSave"))
                                      .Name("btnSaveNext").Events(e => e.Click("MTF1040.btnSaveClick")))
                            </div>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
}