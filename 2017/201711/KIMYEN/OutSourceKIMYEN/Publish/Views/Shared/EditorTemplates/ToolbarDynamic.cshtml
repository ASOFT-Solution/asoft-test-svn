@using ASOFT.ERP.A00.Core
@model ASOFT.ERP.ViewModel.ASOFTToolBarViewModel
@if (Model != null)
{
    <ul class="asf-toolbar">
        @if (Model.DisplayAdd)
        {
            <li>@(Html.ASOFTAddButton(Model.EventAdd, new {title = ASOFTLanguage.FindWordA00("A00.btnAddNew")})
                      .Name((Model.NameAdd ?? "BtnAddNew") + "_" + Model.ScreenID + "_" + Model.TableID)
                     .Enable(ASOFTEnvironment.CheckPermission(screenID: Model.ScreenIDAdd ?? Model.BelongToScreenID, permission: ASOFTPermission.AddNew))
                      )
            </li>
        }
        @if (Model.DisplaySendDocXR) //Gui công van
        {
            <li>@(Html.ASOFTSendDocXRButton(Model.EventSendDocXR, new {title = ASOFTLanguage.FindWordA00("A00.btnSendDocXR")})
                      .Name((Model.NameSendDocXR ?? "btnSendDocXR") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(screenID: Model.ScreenIDSendDocXR ?? Model.BelongToScreenID, 
                                                permission: ASOFTPermission.Update))
                      )
            </li>
        }
        @if (Model.DisplaySendDocVPL)//Gui công van
        {
            <li>@(Html.ASOFTSendDocVPLButton(Model.EventSendDocVPL, new {title = ASOFTLanguage.FindWordA00("A00.btnSendDocVPL")})
                      .Name((Model.NameSendDocVPL ?? "btnSendDocVPL") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(screenID: Model.ScreenIDSendDocVPL ?? Model.BelongToScreenID, 
                                                permission: ASOFTPermission.Update))
                      )
            </li>
        }
        @if (Model.DisplayCloseDetail)//Dong ho so
        {
            <li>@(Html.ASOFTCloseResumeButton(Model.EventCloseDetail, new {title = ASOFTLanguage.FindWordA00("A00.btnCloseResume")})
                      .Name((Model.NameCloseDetail ?? "btnCloseResumeDetail") + "_" + Model.ScreenID + "_" + Model.TableID)
                      )
            </li>
        }
        @if (Model.DisplayOpenDetail)//Dong ho so
        {
            <li>@(Html.ASOFTOpenResumeButton(Model.EventOpenDetail, new {title = ASOFTLanguage.FindWordA00("A00.btnOpenResume")})
                      .Name((Model.NameOpenDetail ?? "btnOpenResumeDetail") + "_" + Model.ScreenID + "_" + Model.TableID)
                      )
            </li>
        }
        @if (Model.DisplayEdit)
        {
            <li>@(Html.ASOFTEditButton(Model.EventEdit, new {title = ASOFTLanguage.FindWordA00("A00.btnEdit")})
                      .Name((Model.NameEdit ?? "BtnEdit") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(screenID: Model.ScreenIDEdit ?? Model.BelongToScreenID, permission: ASOFTPermission.Update))
                      //.Events(ev => ev.Click(Model.EventAdd))
                      )
            </li>
        }

        @if (Model.DisplaySearch)
        {
            <li>@(Html.ASOFTSearchButton(Model.EventSearch, new {title = ASOFTLanguage.FindWordA00("A00.btnInherit")})
                      .Name((Model.NameSearch ?? "BtnSearch") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID: Model.ScreenIDSearch ?? Model.BelongToScreenID, 
                            permission: ASOFTPermission.AddNew))
                      )
            </li>
        }

        @if (Model.DisplayDelete)
        {
            <li>@(Html.ASOFTDeleteButton(Model.EventDelete, new {title = ASOFTLanguage.FindWordA00("A00.btnDelete")})
                      .Name((Model.NameDelete ?? "BtnDelete") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                                            screenID:  Model.ScreenIDDelete ?? Model.BelongToScreenID, 
                                            permission: ASOFTPermission.Delete))
                      )
            </li>
        }
        @if (Model.DisplayDeleteAll)
        {
            <li>@(Html.ASOFTDeleteAllButton(Model.EventDeleteAll, new {title = ASOFTLanguage.FindWordA00("A00.btnDeleteAll")})
                      .Name((Model.NameDeleteAll ?? "BtnDeleteAll") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                                            screenID:  Model.ScreenIDDeleteAll ?? Model.BelongToScreenID, 
                                            permission: ASOFTPermission.Delete))
                      )
            </li>
        }
        @if (Model.DisplayDeleteDetail)
        {
            <li>@(Html.ASOFTDeleteDetailButton(Model.EventDeleteDetail, new {title = ASOFTLanguage.FindWordA00("A00.btnDelete")})
                      .Name((Model.NameDeleteDetail ?? "BtnDeleteDetail") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(screenID:  Model.ScreenIDDeleteDetail ?? Model.BelongToScreenID,
                                permission: ASOFTPermission.Delete))
                      )
            </li>
        }
        @if (Model.DisplayExportExcel)
        {
            var permissionExportExcel = ASOFTEnvironment.CustomerIndex == 34
                ? ASOFTEnvironment.CheckPermission(
                        screenID: Model.ScreenIDExportExcel ?? Model.BelongToScreenID,
                        permission: ASOFTPermission.IsExportExcel)
                : ASOFTEnvironment.CheckPermission(
                        screenID: Model.ScreenIDExportExcel ?? Model.BelongToScreenID,
                        permission: ASOFTPermission.Print);
            
            <li>@(Html.ASOFTExportExcelDetailButton(Model.EventExportExcel, new {title = ASOFTLanguage.FindWordA00("A00.btnExcel")})
                      .Name((Model.NameExportExcel ?? "BtnExportDetail") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(permissionExportExcel)
                      //.Events(ev => ev.Click("Printer"))
                      )
            </li>
        }
        @if (Model.DisplayExport)
        {
            var permissionExcel = ASOFTEnvironment.CustomerIndex == 34
                ? ASOFTEnvironment.CheckPermission(
                        screenID: Model.ScreenIDExport ?? Model.BelongToScreenID,
                        permission: ASOFTPermission.IsExportExcel)
                : ASOFTEnvironment.CheckPermission(
                        screenID: Model.ScreenIDExport ?? Model.BelongToScreenID,
                        permission: ASOFTPermission.Print);
            
            <li>@(Html.ASOFTExportExcelButton(Model.EventExport, new {title = ASOFTLanguage.FindWordA00("A00.btnExcel")})
                      .Name((Model.NameExport ?? "BtnExport") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(permissionExcel)
                      //.Events(ev => ev.Click("Printer"))
                      )
            </li>
        }
        @if (Model.DisplayPrint)
        {
            <li>@(Html.ASOFTPrinterButton(Model.EventPrint, new {title = ASOFTLanguage.FindWordA00("A00.btnPrint")})
                      .Name((Model.NamePrint ?? "BtnPrint") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID:  Model.ScreenIDPrint ?? Model.BelongToScreenID, 
                            permission: ASOFTPermission.Print))
                      //.Events(ev => ev.Click("Printer"))
                      )
            </li>
        }
        @if (Model.DisplayPrintCV)
        {
            <li>@(Html.ASOFTPrinterCVButton(Model.EventPrintCV, new {title = ASOFTLanguage.FindWordA00("A00.btnPrintCV")})
                      .Name((Model.NamePrintCV ?? "BtnPrintCV") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID:  Model.ScreenIDPrintCV ?? Model.BelongToScreenID, 
                            permission: ASOFTPermission.Print))
                      )
            </li>
        }
        @if (Model.DisplayImport)
        {
            <li>@(Html.ASOFTImportButton(Model.EventImport, new {title = ASOFTLanguage.FindWordA00("A00.btnImport")})
                      .Name((Model.NameImport ?? "btnImport") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID: Model.ScreenIDImport ?? Model.BelongToScreenID,
                            permission: ASOFTPermission.AddNew))
                      //.Events(ev => ev.Click("Printer"))
                      )
            </li>
        }

        @if (Model.DisplayImportBank)
        {
            <li>@(Html.ASOFTImportBankButton(Model.EventImportBank, new {title = ASOFTLanguage.FindWordA00("A00.btnImportBank")})
                      .Name((Model.NameImportBank ?? "btnImportBank") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID: Model.ScreenIDImportBank ?? Model.BelongToScreenID,
                            permission: ASOFTPermission.AddNew))
                      //.Events(ev => ev.Click("Printer"))
                      )
            </li>
        }

        @if (Model.DisplaySQLQueryExport)
        {
            <li>@(Html.ASOFTSQLQueryExportButton(Model.EventSQLQueryExport, new {title = ASOFTLanguage.FindWordA00("A00.btnSQLQueryExport")})
                      .Name((Model.NameSQLQueryExport ?? "btnSQLQueryExport") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID: Model.ScreenIDSQLQueryExport?? Model.BelongToScreenID,
                            permission: ASOFTPermission.Print))
                      //.Events(ev => ev.Click("Printer"))
                      )
            </li>
        }
        @if (Model.DisplayExportF)
        {
            <li>@(Html.ASOFTExportButton(Model.EventExportF, new {title = ASOFTLanguage.FindWordA00("A00.btnExportF")})
                      .Name((Model.NamePrint ?? "btnExportF") + "_" + Model.ScreenID + "_" + Model.TableID)
                      //.Enable(ASOFTEnvironment.CheckPermission(
                      //      screenID:  Model.ScreenIDImport ?? Model.BelongToScreenID, 
                      //      permission: ASOFTPermission.Print))
                      //.Events(ev => ev.Click("Printer"))
                      )
            </li>
        }
        @if (Model.DisplayClose)//Dong ho so
        {
            <li>@(Html.ASOFTCloseResumeButton(Model.EventClose, new {title = ASOFTLanguage.FindWordA00("A00.btnCloseResume")})
                      .Name((Model.NameClose ?? "btnCloseResume") + "_" + Model.ScreenID + "_" + Model.TableID)
                      )
            </li>
        }
        @if (Model.DisplayOpenResume)//Mo ho so
        {
            <li>@(Html.ASOFTOpenResumeButton(Model.EventOpenResume, new {title = ASOFTLanguage.FindWordA00("A00.btnOpenResume")})
                      .Name((Model.NameOpenResume ?? "btnOpenResume") + "_" + Model.ScreenID + "_" + Model.TableID)
                      )
            </li>
        }
        @if (Model.DisplaySendDoc)//Gửi công văn
        {
            <li>@(Html.ASOFTSendDocumentButton(Model.EventSendDoc, new {title = ASOFTLanguage.FindWordA00("A00.btnSendDoc")})
                      .Name((Model.NameSendDoc ?? "btnSendDoc") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                        screenID:  Model.ScreenIDSendDoc ?? Model.BelongToScreenID, 
                        permission: ASOFTPermission.AddNew))
                      )
            </li>
        }
        @if (Model.DisplayShow)
        {
            <li>@(Html.ASOFTShowButton(Model.EventShow, new {title = ASOFTLanguage.FindWordA00("A00.btnShow")})
                      .Name((Model.NameShow ?? "BtnShow") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                        screenID:  Model.ScreenIDShow ?? Model.BelongToScreenID, 
                        permission: ASOFTPermission.Update))
                      )
            </li>
        }
        @if (Model.DisplayHide)
        {
            <li>@(Html.ASOFTHideButton(Model.EventHide, new {title = ASOFTLanguage.FindWordA00("A00.btnHide")})
                      .Name((Model.NameHide ?? "BtnHide") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID:  Model.ScreenIDHide ?? Model.BelongToScreenID, 
                            permission: ASOFTPermission.Update))
                      )
            </li>
        }

        @if (Model.DisplayLockUser)//khóa user
        {
            <li>@(Html.ASOFTLockUserButton(Model.EventLockUser, new {title = ASOFTLanguage.FindWordA00("A00.btnLockUser")})
                      .Name((Model.NameLockUser ?? "btnLockUser") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID: Model.ScreenIDLockUser ?? Model.BelongToScreenID,
                            permission: ASOFTPermission.Update))
                      )
            </li>
        }

        @if (Model.DisplayUnlockUser)//active user
        {
            <li>@(Html.ASOFTUnLockUserButton(Model.EventUnlockUser, new {title = ASOFTLanguage.FindWordA00("A00.btnUnLockUser")})
                      .Name((Model.NameUnlockUser ?? "btnUnLockUser") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID: Model.ScreenIDUnlockUser ?? Model.BelongToScreenID,
                            permission: ASOFTPermission.Update))
                      )
            </li>
        }

        @if (Model.DisplayResetPass)//khóa user
        {
            <li>@(Html.ASOFTResetPassButton(Model.EventResetPassUser, new {title = ASOFTLanguage.FindWordA00("A00.btnResetPassUser")})
                      .Name((Model.NameResetPass ?? "btnResetPassUser") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID:  Model.ScreenIDResetPass ?? Model.BelongToScreenID, 
                            permission: ASOFTPermission.AddNew))
                      )
            </li>
        }

        @if (Model.DisplayEmpToTeam)
        {
            <li>@(Html.ASOFTEmpToTeamButton(Model.EventEmpToTeam, new {title = ASOFTLanguage.FindWordA00("A00.btnEmpToTeam")})
                      .Name((Model.NameEmpToTeam ?? "BtnEmpToTeam") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID: Model.ScreenIDEmpToTeam ?? Model.BelongToScreenID,
                            permission: ASOFTPermission.AddNew))
                      )
            </li>
        }

        @if (Model.DisplayInActive)
        {
            <li>@(Html.ASOFTInActiveButton(Model.EventInActive)
                      .Name((Model.EventInActive ?? "BtnInActive") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID:  Model.ScreenIDInActive ?? Model.BelongToScreenID, 
                            permission: ASOFTPermission.Update))
                      )
            </li>
        }
                
        @if (Model.DisplayActive)
        {
            <li>@(Html.ASOFTActiveButton(Model.EventActive)
                      .Name((Model.ScreenIDActive ?? "BtnActive") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID:  Model.ScreenIDActive ?? Model.BelongToScreenID, 
                            permission: ASOFTPermission.Update))
                      )
            </li>
        }
        @if (Model.DisplayAddToCampaign)
        {
            <li>@(Html.ASOFTAddToCampaignButton(Model.EventAddToCampaign, new {title = ASOFTLanguage.FindWordA00("A00.btnAddToCampaign")})
                      .Name((Model.NameAddToCampaign ?? "BtnAddToCampaign") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID:  Model.ScreenIDAddToCampaign ?? Model.BelongToScreenID, 
                            permission: ASOFTPermission.Update)))
                      
            </li>
        }
        @if (Model.DisplaySendEmail)
        {
            <li>@(Html.ASOFTSendEmailButton(Model.EventSendEmail, new {title = ASOFTLanguage.FindWordA00("A00.btnSendEmail")})
                      .Name((Model.NameSendEmail ?? "BtnSendEmail") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID: Model.ScreenIDSendEmail ?? Model.BelongToScreenID, 
                            permission: ASOFTPermission.AddNew))
                      )
            </li>
        }
        
        @if (Model.DisplayAddToReceiver)
        {
            <li>@(Html.ASOFTAddToReceiverButton(Model.EventAddToReceiver, new {title = ASOFTLanguage.FindWordA00("A00.btnAddToReceiver")})
                      .Name((Model.NameAddToReceiver ?? "BtnAddToReceiver") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID: Model.ScreenIDAddToReceiver ?? Model.BelongToScreenID, 
                            permission: ASOFTPermission.AddNew))
                      )
            </li>
        }

       @if (Model.DisplayInherit)
        {
            <li>@(Html.ASOFTInheritButton(Model.EventInherit, new {title = ASOFTLanguage.FindWordA00("A00.btnInherit")})
                      .Name((Model.NameInherit ?? "BtnInherit") + "_" + Model.ScreenID + "_" + Model.TableID)
                      .Enable(ASOFTEnvironment.CheckPermission(
                            screenID: Model.ScreenIDInherit ?? Model.BelongToScreenID, 
                            permission: ASOFTPermission.AddNew))
                      )
            </li>
        }

    </ul>
}