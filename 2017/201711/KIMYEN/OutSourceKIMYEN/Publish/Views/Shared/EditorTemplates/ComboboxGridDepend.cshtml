

@using ASOFT.ERP.A00.Core
@using ASOFT.ERP.A00.Entities.Common;
@using ASOFT.ERP.A00.Core.Control
@using ASOFT.ERP.ViewModel;
@using Kendo.Mvc.UI

@model string


 @{  
    ComboBoxDynamic DynamicComboModel = new ComboBoxDynamic();
    List<string> cbdepend = new List<string>();
    cbdepend = (List<string>)Session["cbdepend" + ASOFTEnvironment.UserID + ASOFTEnvironment.ModuleID];
    string Column = cbdepend[0].Split(',')[1];
    string table = cbdepend[0].Split(',')[2];
    DynamicComboModel.sysComboBoxID = cbdepend[0].Split(',')[0];
    DynamicComboModel.ScreenID = Session["scr" + ASOFTEnvironment.UserID + ASOFTEnvironment.ModuleID].ToString();
    DynamicComboModel.Module = Session["mdl" + ASOFTEnvironment.UserID + ASOFTEnvironment.ModuleID].ToString();
    cbdepend.Remove(cbdepend[0]);
    Session.Remove("cbdepend" + ASOFTEnvironment.UserID + ASOFTEnvironment.ModuleID);
    if (cbdepend.Count > 0)
    {
        Session["cbdepend" + ASOFTEnvironment.UserID + ASOFTEnvironment.ModuleID] = cbdepend;
    } 
  }
  @Html.ASOFTBussinessComboBox().ASOFTComboBoxMultiColumn(m => m, DynamicComboModel, true, htmlAttributes: new { @id = "cbb" + Column, @Module = DynamicComboModel.Module, @ScreenID = DynamicComboModel.ScreenID, @sysComboBoxID = DynamicComboModel.sysComboBoxID, @isGrid = 1,  @ParentCombo = "true", @tableGrid = table}).Events(e => e.Open("OpenComboDynamic"))