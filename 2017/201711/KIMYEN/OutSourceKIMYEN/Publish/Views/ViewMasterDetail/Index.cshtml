@*
//####################################################################
//# Copyright (C) 2010-2011, ASoft JSC.  All Rights Reserved. 
//#
//# History:
//#     Date Time       Updater         Comment
//#     18/11/2015     Quang Hoàng         Tạo mới
//####################################################################
*@
@using System.Web.Optimization
@using ASOFT.ERP.A00.Core
@using ASOFT.ERP.A00.Entities.Common;
@using ASOFT.ERP.A00.Core.MapperHelper;
@using ASOFT.ERP.ViewModel;
@using System.Web.UI.WebControls;
@model IEnumerable<ASOFTSysFieldsViewModel>
@Html.ASOFTHidden("ParentID", (string)ViewBag.ParentID)

@{
    Layout = "~/Views/Shared/_MasterDetailDynamicLayout.cshtml";

    string DivisionID = ViewBag.DivisionID;
    string Header = ViewBag.Header;
    string ScreenID = ViewBag.ScreenID;
    string title = ViewBag.Title;
    string ScreenPopup = ViewBag.ScreenPopup;
    string module = ViewBag.Module;
    string urledit = "";
    string urladddetail = "";
    string urldel = string.Empty;
    string pk = ViewBag.PKParent;
    string key = ViewBag.Key;
    int sysCategoryBusinessID = ViewBag.sysCategoryBusinessID;

    List<string> listjava = new List<string>();
    listjava = ViewBag.Java;
    List<string> listcss = new List<string>();
    listcss = ViewBag.CSS;

    List<ASOFTSysFieldsViewModel> listPK = ViewBag.ListPK;
    List<ASOFTSysGroupViewModel> listgr = ViewBag.Group;
    List<ASOFTSysTableViewModel> listtb = ViewBag.Table;

    int typeinput = ViewBag.TypeInput;

    ViewBag.Title = Html.ASOFTPageTitle(Header, ScreenID).ToHtmlString();

    if (typeinput == 1)
    {
        urledit = "/PopupLayout/Index/" + ViewBag.Module + "/" + ScreenPopup + "?Pk=" + pk + "&Table=" + Model.ElementAt(0).sysTable + "&key=" + key + "&DivisionID=" + DivisionID;
    }
    if (typeinput == 2)
    {
        urledit = "/PopupMasterDetail/Index/" + ViewBag.Module + "/" + ScreenPopup + "?Pk=" + pk + "&Table=" + Model.ElementAt(0).sysTable + "&key=" + key + "&DivisionID=" + DivisionID;
    }
    if (sysCategoryBusinessID == 1)
    {
        urldel = "/GridCommon/Delete/" + module + "/" + ScreenID;
    }
    if (sysCategoryBusinessID == 2)
    {
        urldel = "/GridCommon/DeleteBussiness/" + module + "/" + ScreenID;
    }

    foreach (var lpk in listPK)
    {
    @Html.ASOFTHidden(lpk.sysTable, lpk.ColumnName)
    @Html.ASOFTHidden("dttype" + lpk.sysTable, lpk.sysDataTypeID)
    @Html.ASOFTHidden("t" + lpk.sysTable, "1")
    }
}

@Html.ASOFTHidden("EnvironmentDivisionID", ASOFTEnvironment.DivisionID)
@Html.ASOFTHidden("DivisionIDMaster", DivisionID)
@Html.ASOFTHidden("Edit", urledit)
@Html.ASOFTHidden("urladddetail", urladddetail)
@Html.ASOFTHidden("sysScreenID", ScreenID)
@Html.ASOFTHidden("sysTable", Model.ElementAt(0).sysTable)
@Html.ASOFTHidden("PK", pk)
@Html.ASOFTHidden("Key", key)
@Html.ASOFTHidden("PKIndex", listPK[0].ColumnName)
@Html.ASOFTHidden("TBIndex", listPK[0].sysTable)
@Html.ASOFTHidden("dtTypeIndex", listPK[0].sysDataTypeID)
@Html.ASOFTHidden("Module", module)
@Html.ASOFTHidden("ScrIndex", listtb[0].ScreenID)
@Html.ASOFTHidden("typeinput", typeinput)
@Html.ASOFTHidden("urldel", urldel)
@Html.ASOFTHidden("urlParent", this.Url.Action("Index", "Contentmaster", null , this.Request.Url.Scheme))
@Html.ASOFTHidden("urlParentContent", Request.Url.PathAndQuery)


@Html.ASOFTHeader(new HeaderModel
   {
       Title = ViewBag.Title,
       Breakcrumb = true
   })

@{
    string additionnalCSS = "";
    if (Model.ElementAt(0).Toolbar1 == null)
    {
        additionnalCSS = "asf-auto-height";
        Model.ElementAt(0).Toolbar1 = new ASOFTToolBarViewModel();
    }
}




@helper tableHeader(ASOFTSysGroupViewModel gr)
{
    <table class="asf-table-view">
        <thead>
            <tr class="tr-zero-height">
                <td class="asf-td-label-left"></td>
                <td class="asf-td-label-right"></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                if(item.ViewVisible == 0)
                {
                    @Html.ASOFTHidden(item.ColumnName, item.Data)
                    continue;
                }
                if (gr.sysGroupID == item.sysGroupID)
                {
                <tr>
                    <td class ="asoft-title-master">@Html.Label(item.language)</td>
                    <td class="@item.ColumnName">@Html.DisplayFor(itemodel => item.Data)</td>
                </tr>
                }
            }
        </tbody>
    </table>
}

@helper tabHeader(ASOFTSysTableViewModel tab, string screen, string module, int typeinput)
{
    if (tab.ScreenID == null)
    {          
    @Html.Action("GridCommon", "GridCommon", new { area = "", id = screen, module = module, table = tab.TableName });
    }
    else
    {
    @Html.Action("GridCommon", "GridCommon", new { area = "", id = tab.ScreenID, child = tab.ScreenID, module = module, table = tab.TableName, typeinput = typeinput });
    }
}



<div id="mtf1042-viewmastercontent">
    <div id="ViewMaster" class="asf-panel-view-master-detail mtf1042-view-master">
        <div class="asf-panel-master-header @additionnalCSS">
            @{
                if (Model.ElementAt(0).Action != null && Model.ElementAt(0).Action.ListAction != null)
                {
                @Html.Partial("~/Views/Shared/Action/Action.cshtml", Model.ElementAt(0).Action)
                }
            }
            <div class="asfbtn asfbtn-right">
                @if (Model.ElementAt(0).Toolbar1 != null)
                {
                    Model.ElementAt(0).Toolbar1.EventEdit = "EditMaster_Click";
                    Model.ElementAt(0).Toolbar1.EventDelete = "DeleteMaster_Click";
                    Model.ElementAt(0).Toolbar1.EventPrint = "BtnPrint_Click";
                }
                @Html.Partial("~/Views/Shared/EditorTemplates/Toolbar.cshtml",
                           Model.ElementAt(0).Toolbar1)
            </div>
        </div>
        <div class="asf-master-content">
            @{bool openGroup = true;}
            @foreach (var panel in listgr)
                        {
                            var helper = tableHeader(panel).ToHtmlString();
                @(Html.ASOFTPanel()
                        .Name(panel.GroupName)
                        .Items(panelbar =>
                        {
                                panelbar
                                .Add()
                                .HtmlAttributes(new
                                {
                                    @class = "block-panel-master-header"
                                })
                                .Expanded(openGroup)
                                .Content(helper)
                                .Text(panel.language);
                        
                        }))
                            openGroup = false;
            }
        </div>
    </div>
    <div id="viewdetail" class="asf-panel-view-detail">
        <div class="asfbtn asfbtn-right">
            @if (Model.ElementAt(0).Toolbar2 != null)
            {
                Model.ElementAt(0).Toolbar2.EventAdd = "AddDetail_Click";
                Model.ElementAt(0).Toolbar2.EventDeleteDetail = "DeleteDetail_Click";
            }
            @Html.Partial("~/Views/Shared/EditorTemplates/Toolbar.cshtml",
                     Model.ElementAt(0).Toolbar2 ?? new ASOFTToolBarViewModel())
        </div>
        @(Html.ASOFTTab()
                .Name("Tabs")
                .Items(tabstrip =>
                {
                    int i = 0;
                    bool selected = true;
                    foreach (var tab in listtb)
                    {
                        var tabhp = tabHeader(tab, ScreenID, module, typeinput).ToHtmlString();
                        tabstrip
                            .Add()
                            .HtmlAttributes(new
                            {
                                id = tab.TableName,
                                name = tab.ScreenID
                            })
                            .Selected(selected)
                            .ContentHtmlAttributes(new
                            {
                                @class = "asf-tab-content"
                            })
                            .Content(tabhp)
                            .Text(listPK[i].language)
                            ;
                        selected = false;
                        i++;
                    }
                }).Events(events => events.Select("Change"))
)
    </div>
</div>

@section jsFeature {
    @if (listjava.Count > 0)
    {
        foreach (string jv in listjava)
        {
        <script src="@Url.Content("~/Scripts/JavaCustomize/"+ module + "/" + jv+"?v="+ASOFTEnvironment.Version)" type="text/javascript"></script>
        }
    }
}

@section styleFeature {
    @if (listcss.Count > 0)
    {
        foreach(string css in listcss)
        {
            <link  href="@Url.Content("~/Content/CSSCustomize/"+ module + "/" + css + "?v="+ASOFTEnvironment.Version)" rel="stylesheet" type="text/css" />
        }
    }
}

<script src="@Url.Content("~/Scripts/viewmasterdetail.js" + "?v="+ASOFTEnvironment.Version)" type="text/javascript"></script>
